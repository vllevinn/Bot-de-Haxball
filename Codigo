// PRUEBA

/* SALA */
const roomName = "TEST";
const botName = "GORDO ANTIKUKA";
const maxPlayers = 20; //maximo jugadores en sala
const roomPublic = false; // true = sala pública | false = jugadores entran con el link de la sala
const geo = [{"lat": -22.9201, "lon": -43.3307, "code": "br"}, {"code": "FR", "lat": 46.2, "lon": 2.2}, {"code": "PL", "lat": 51.9, "lon": 19.1}, {"code": "GB", "lat": 55.3, "lon": -3.4}, {"code": "PT", "lat": 39.3, "lon": -8.2}]; 
// se puede cambiar la geo 

const room = HBInit({
    roomName: roomName,
    maxPlayers: maxPlayers,
    public: roomPublic,
    playerName: botName,
});
    geo: geo[0]

const scoreLimitPractice = 3;
const timeLimitPractice = 3;

let Cor = {
    Vermelho: 0xFA5646,
    Laranja: 0xFFC12F,
    Verde: 0x7DFA89,
    Azul: 0x05C5FF,
    Amarelo: 0xFFFF17,
    Cinza: 0xCCCCCC,
    Branco: 0xFFFFFF,
    Azulclaro: 0x6ECAFF,
    Powderblue: 0xB0E0E6,
    Roxo: 0x800080,
    Platina: 0xE5E4E2,
    Ouro: 0xffd700,
    Prata: 0xd5d5d5,
    Bronze: 0x896728,
    Thistle: 0xD8BFD8,
    Khaki: 0xF0E68C,
    AliceBlue: 0xF0F8FF,
    GhostWhite: 0xF8F8FF,
    Snow: 0xFFFAFA,
    Seashell:0xFFF5EE,
    FloralWhite: 0xFFFAF0,
    WhiteSmoke: 0xF5F5F5,
    Beige: 0xF5F5DC,
    OldLace: 0xFDF5E6,
    Ivory: 0xFFFFF0,
    Linen: 0xFAF0E6,
    Cornsilk: 0xFFF8DC,
    AntiqueWhite: 0xFAEBD7,
    BlanchedAlmond: 0xFFEBCD,
    Bisque: 0xFFE4C4,
    LightYellow: 0xFFFFE0,
    LemonChiffon: 0xFFFACD,
    LightGoldenrodYellow: 0xFAFAD2,
    PapayaWhip: 0xFFEFD5,
    PeachPuff: 0xFFDAB9,
    Moccasin: 0xFFE4B5,
    PaleGoldenrod: 0xEEE8AA,
    Azulescuro: 0x426AD6,
    Warn: 0xff9966
        }
    // frases de gol   
    const frasesGols = ["¡GOOOOL, LA RECONCHA DE SU MADRE! ¡A vos, zurdito de mierda! ¡Esto no se consigue llorando!",

    "¡GOOOOL! ¡Sigan llorando, progres! ¡Acá se gana con huevo, no con favores del Estado!",

    "¡GOOOOL, MANGA DE INÚTILES! ¡Kirchneristas de mierda, aprendan a jugar en vez de pedir plata y subsidios!",

    "¡GOOOOL! ¡Socialistas de mierda, les dejamos el culo como un mandril!",

    "¡GOOOOL, CÓMO LOS CAGO! ¡Manga de parásitos!" 
    ];
    // frases por asistencias
    const frasesasis = ["¡¡¡ASISTENCIAAAAAA!!! ¡Mirá lo que es esto, kirchnerista de mierda! ¡Acá no se pide limosna, se juega con huevos y sin depender de nadie! ¡Dejá de robar y hacete cargo de algo alguna vez, forro!",

    "¡Qué asistencia, zurdo pelotudo! ¡Esto no es un plan social, papá! ¡No venís a regalarle nada a nadie, se labura, se juega, y se gana, no se espera regalos de nadie!",

    "¡¡¡ASISTENCIAAAAA!!! ¡Para vos, progres hijo de puta! ¡Dejá de llorar por el Estado y ponete a laburar, inútil!",

    "¡Vamos carajo, asistencia de  la puta madre! ¡No como esos socialistas de mierda que esperan que todo se lo den en bandeja! ¡No jodan, esto se hace con trabajo, no con campañas del miedo!",

    "¡¡¡ASISTENCIAAAAAA!!! ¡Para los que piensan que el fútbol se gana con palancas políticas, que la chupen, y que la sigan chupando! ¡Esto es talento, pelotudos! ¡Nada de andar llorando en la tribuna ni esperando que alguien te haga el favor!"
    ];
    // frases de gol encontra
    const frasesautogol = ["¡¿QUÉ CARAJO HIZO ESTE FORRO?! ¡Gol encontra, LA PUTA MADRE QUE TE RE MIL PARIÓ! ¡No puede ser, ¿en qué cabeza cabe hacer semejante estupidez? ¡Increíble! ¡Esto es un chiste, no sé si reírme o llorar de la vergüenza!",

    "¡NO LO PUEDO CREER, HIJO DE PUTA! ¡¿Gol encontra?! ¡¿ESTO QUÉ ES, UNA BURLA?! ¡Este pelotudo acaba de cagar todo el partido, no te podés ser imbécil, la puta que lo parió!",

    "¡LA RECONCHA DE SU MADRE! ¡Gol encontra, y el pelotudo ni se da cuenta! ¡Se nota que no te importa nada, forro! ¡Esto es una cagada de proporciones bíblicas, nos cagaron el partido y no podemos hacer nada más que mirar!",

    "¡POR DIOS, QUÉ HIJO DE MIL PUTA! ¡Gol encontra de un pelotudo que no sabe ni dónde está! ¡Esto no es fútbol, esto es una bolsa de gente que no tiene ni idea lo que hace!",

    "¡LA CONCHA DE SU MADRE, UN GOL ENCONTRA MÁS! ¡Y encima, el pelotudo lo celebra como si hubiera hecho algo bien! ¡¿Te das cuenta de lo que hiciste, hijo de puta?! ¡Esto es un insulto al fútbol!" 
    ];

const secondsToResetAvatar = 3;
var registro = new Map();
const css = "border:2px solid;padding:8px;background:";
room.setTeamsLock(true);
var message;
var msg1;
var msg1Time = 1500000;
var Deus = [];
var BotdivulgaTime = 900000;
var adminPassword = 4002;

var vip1 = [];
var vip2 = [];
var vip3 = [];

/* ESTADIO */

const playerRadius = 15;
var ballRadius = 6.25;
const triggerDistance = playerRadius + ballRadius + 0.01;

var practiceMap = `{"name":"Futsal x3  by Bazinga from HaxMaps","width":620,"height":270,"spawnDistance":350,"bg":{"type":"hockey","width":550,"height":240,"kickOffRadius":80,"cornerRadius":0},"vertexes":[{"x":550,"y":240,"trait":"ballArea"},{"x":550,"y":-240,"trait":"ballArea"},{"x":0,"y":270,"trait":"kickOffBarrier"},{"x":0,"y":80,"bCoef":0.15,"trait":"kickOffBarrier","color":"F8F8F8","vis":true,"curve":180},{"x":0,"y":-80,"bCoef":0.15,"trait":"kickOffBarrier","color":"F8F8F8","vis":true,"curve":180},{"x":0,"y":-270,"trait":"kickOffBarrier"},{"x":-550,"y":-80,"cMask":["red","blue","ball"],"trait":"goalNet","curve":0,"color":"F8F8F8","pos":[-700,-80]},{"x":-590,"y":-80,"cMask":["red","blue","ball"],"trait":"goalNet","curve":0,"color":"F8F8F8","pos":[-700,-80]},{"x":-590,"y":80,"cMask":["red","blue","ball"],"trait":"goalNet","curve":0,"color":"F8F8F8","pos":[-700,80]},{"x":-550,"y":80,"cMask":["red","blue","ball"],"trait":"goalNet","curve":0,"color":"F8F8F8","pos":[-700,80]},{"x":550,"y":-80,"cMask":["red","blue","ball"],"trait":"goalNet","curve":0,"color":"F8F8F8","pos":[700,-80]},{"x":590,"y":-80,"cMask":["red","blue","ball"],"trait":"goalNet","curve":0,"color":"F8F8F8","pos":[700,-80]},{"x":590,"y":80,"cMask":["red","blue","ball"],"trait":"goalNet","curve":0,"color":"F8F8F8","pos":[700,80]},{"x":550,"y":80,"cMask":["red","blue","ball"],"trait":"goalNet","curve":0,"color":"F8F8F8","pos":[700,80]},{"x":-550,"y":80,"bCoef":1.15,"cMask":["ball"],"trait":"ballArea","color":"F8F8F8","pos":[-700,80]},{"x":-550,"y":240,"bCoef":1.15,"cMask":["ball"],"trait":"ballArea","color":"F8F8F8"},{"x":-550,"y":-80,"bCoef":1.15,"cMask":["ball"],"trait":"ballArea","color":"F8F8F8","pos":[-700,-80]},{"x":-550,"y":-240,"bCoef":1.15,"cMask":["ball"],"trait":"ballArea","color":"F8F8F8"},{"x":-550,"y":240,"bCoef":1,"cMask":["ball"],"trait":"ballArea"},{"x":550,"y":240,"bCoef":1,"cMask":["ball"],"trait":"ballArea"},{"x":550,"y":80,"bCoef":1.15,"cMask":["ball"],"trait":"ballArea","pos":[700,80]},{"x":550,"y":240,"bCoef":1.15,"cMask":["ball"],"trait":"ballArea"},{"x":550,"y":-240,"bCoef":1.15,"cMask":["ball"],"trait":"ballArea","color":"F8F8F8"},{"x":550,"y":-80,"bCoef":1.15,"cMask":["ball"],"trait":"ballArea","color":"F8F8F8","pos":[700,-80]},{"x":550,"y":-240,"bCoef":0,"cMask":["ball"],"trait":"ballArea"},{"x":550,"y":-240,"bCoef":0,"cMask":["ball"],"trait":"ballArea"},{"x":-550,"y":-240,"bCoef":1,"cMask":["ball"],"trait":"ballArea","curve":0},{"x":550,"y":-240,"bCoef":1,"cMask":["ball"],"trait":"ballArea","curve":0},{"x":0,"y":-240,"bCoef":0.1,"cMask":["red","blue"],"cGroup":["redKO","blueKO"],"trait":"kickOffBarrier"},{"x":0,"y":-80,"bCoef":0.1,"cMask":["red","blue"],"cGroup":["redKO","blueKO"],"trait":"kickOffBarrier"},{"x":0,"y":80,"bCoef":0.1,"cMask":["red","blue"],"cGroup":["redKO","blueKO"],"trait":"kickOffBarrier"},{"x":0,"y":240,"bCoef":0.1,"cMask":["red","blue"],"cGroup":["redKO","blueKO"],"trait":"kickOffBarrier"},{"x":0,"y":-80,"bCoef":0.1,"cMask":["red","blue"],"trait":"kickOffBarrier","vis":true,"color":"F8F8F8"},{"x":0,"y":80,"bCoef":0.1,"cMask":["red","blue"],"trait":"kickOffBarrier","vis":true,"color":"F8F8F8"},{"x":0,"y":80,"trait":"kickOffBarrier","color":"F8F8F8","vis":true,"curve":-180},{"x":0,"y":-80,"trait":"kickOffBarrier","color":"F8F8F8","vis":true,"curve":-180},{"x":0,"y":80,"trait":"kickOffBarrier","color":"F8F8F8","vis":true,"curve":0},{"x":0,"y":-80,"trait":"kickOffBarrier","color":"F8F8F8","vis":true,"curve":0},{"x":-557.5,"y":80,"bCoef":1,"cMask":["ball"],"trait":"ballArea","curve":0,"vis":false,"pos":[-700,80]},{"x":-557.5,"y":240,"bCoef":1,"cMask":["ball"],"trait":"ballArea","curve":0,"vis":false},{"x":-557.5,"y":-240,"bCoef":1,"cMask":["ball"],"trait":"ballArea","vis":false,"curve":0},{"x":-557.5,"y":-80,"bCoef":1,"cMask":["ball"],"trait":"ballArea","vis":false,"curve":0,"pos":[-700,-80]},{"x":557.5,"y":-240,"bCoef":1,"cMask":["ball"],"trait":"ballArea","vis":false,"curve":0},{"x":557.5,"y":-80,"bCoef":1,"cMask":["ball"],"trait":"ballArea","vis":false,"curve":0,"pos":[700,-80]},{"x":557.5,"y":80,"bCoef":1,"cMask":["ball"],"trait":"ballArea","curve":0,"vis":false,"pos":[700,80]},{"x":557.5,"y":240,"bCoef":1,"cMask":["ball"],"trait":"ballArea","curve":0,"vis":false},{"x":0,"y":-80,"bCoef":0.1,"trait":"line"},{"x":0,"y":80,"bCoef":0.1,"trait":"line"},{"x":-550,"y":-80,"bCoef":0.1,"trait":"line"},{"x":-550,"y":80,"bCoef":0.1,"trait":"line"},{"x":550,"y":-80,"bCoef":0.1,"trait":"line"},{"x":550,"y":80,"bCoef":0.1,"trait":"line"},{"x":-240,"y":256,"bCoef":0.1,"trait":"line"},{"x":-120,"y":256,"bCoef":0.1,"trait":"line"},{"x":-240,"y":-256,"bCoef":0.1,"trait":"line"},{"x":-120,"y":-224,"bCoef":0.1,"trait":"line"},{"x":-120,"y":-256,"bCoef":0.1,"trait":"line"},{"x":240,"y":256,"bCoef":0.1,"trait":"line"},{"x":120,"y":224,"bCoef":0.1,"trait":"line"},{"x":120,"y":256,"bCoef":0.1,"trait":"line"},{"x":240,"y":-224,"bCoef":0.1,"trait":"line"},{"x":240,"y":-256,"bCoef":0.1,"trait":"line"},{"x":120,"y":-224,"bCoef":0.1,"trait":"line"},{"x":120,"y":-256,"bCoef":0.1,"trait":"line"},{"x":-381,"y":240,"bCoef":0.1,"trait":"line"},{"x":-381,"y":256,"bCoef":0.1,"trait":"line"},{"x":-550,"y":200,"bCoef":0.1,"trait":"line","color":"F8F8F8","curve":-90},{"x":-390,"y":70,"bCoef":0.1,"trait":"line","color":"F8F8F8","curve":0},{"x":-550,"y":226,"bCoef":0.1,"trait":"line","curve":-90},{"x":-536,"y":240,"bCoef":0.1,"trait":"line","curve":-90},{"x":-550,"y":-200,"bCoef":0.1,"trait":"line","color":"F8F8F8","curve":90},{"x":-390,"y":-70,"bCoef":0.1,"trait":"line","color":"F8F8F8","curve":0},{"x":-550,"y":-226,"bCoef":0.1,"trait":"line","curve":90},{"x":-536,"y":-240,"bCoef":0.1,"trait":"line","curve":90},{"x":-556,"y":123,"bCoef":0.1,"trait":"line"},{"x":-575,"y":123,"bCoef":0.1,"trait":"line"},{"x":556,"y":123,"bCoef":0.1,"trait":"line"},{"x":575,"y":123,"bCoef":0.1,"trait":"line"},{"x":-556,"y":-123,"bCoef":0.1,"trait":"line"},{"x":-575,"y":-123,"bCoef":0.1,"trait":"line"},{"x":556,"y":-123,"bCoef":0.1,"trait":"line"},{"x":575,"y":-123,"bCoef":0.1,"trait":"line"},{"x":-381,"y":-240,"bCoef":0.1,"trait":"line"},{"x":-381,"y":-256,"bCoef":0.1,"trait":"line"},{"x":381,"y":240,"bCoef":0.1,"trait":"line"},{"x":381,"y":256,"bCoef":0.1,"trait":"line"},{"x":381,"y":-240,"bCoef":0.1,"trait":"line"},{"x":381,"y":-256,"bCoef":0.1,"trait":"line"},{"x":550,"y":-226,"bCoef":0.1,"trait":"line","curve":-90},{"x":536,"y":-240,"bCoef":0.1,"trait":"line","curve":-90},{"x":550,"y":226,"bCoef":0.1,"trait":"line","curve":90},{"x":536,"y":240,"bCoef":0.1,"trait":"line","curve":90},{"x":550,"y":200,"bCoef":0.1,"trait":"line","color":"F8F8F8","curve":90},{"x":390,"y":70,"bCoef":0.1,"trait":"line","color":"F8F8F8","curve":90},{"x":550,"y":-200,"bCoef":0.1,"trait":"line","color":"F8F8F8","curve":-90},{"x":390,"y":-70,"bCoef":0.1,"trait":"line","color":"F8F8F8","curve":-90},{"x":390,"y":70,"bCoef":0.1,"trait":"line","color":"F8F8F8","curve":0},{"x":390,"y":-70,"bCoef":0.1,"trait":"line","color":"F8F8F8","curve":0},{"x":-375,"y":1,"bCoef":0.1,"trait":"line","curve":180},{"x":-375,"y":-1,"bCoef":0.1,"trait":"line","curve":180},{"x":-375,"y":3,"bCoef":0.1,"trait":"line","curve":180},{"x":-375,"y":-3,"bCoef":0.1,"trait":"line","curve":180},{"x":-375,"y":-2,"bCoef":0.1,"trait":"line","curve":180},{"x":-375,"y":2,"bCoef":0.1,"trait":"line","curve":180},{"x":-375,"y":-3.5,"bCoef":0.1,"trait":"line","curve":180},{"x":-375,"y":3.5,"bCoef":0.1,"trait":"line","curve":180},{"x":375,"y":1,"bCoef":0.1,"trait":"line","curve":180},{"x":375,"y":-1,"bCoef":0.1,"trait":"line","curve":180},{"x":375,"y":3,"bCoef":0.1,"trait":"line","curve":180},{"x":375,"y":-3,"bCoef":0.1,"trait":"line","curve":180},{"x":375,"y":-2,"bCoef":0.1,"trait":"line","curve":180},{"x":375,"y":2,"bCoef":0.1,"trait":"line","curve":180},{"x":375,"y":-3.5,"bCoef":0.1,"trait":"line","curve":180},{"x":375,"y":3.5,"bCoef":0.1,"trait":"line","curve":180},{"x":-277.5,"y":1,"bCoef":0.1,"trait":"line","curve":180},{"x":-277.5,"y":-1,"bCoef":0.1,"trait":"line","curve":180},{"x":-277.5,"y":3,"bCoef":0.1,"trait":"line","curve":180},{"x":-277.5,"y":-3,"bCoef":0.1,"trait":"line","curve":180},{"x":-277.5,"y":-2,"bCoef":0.1,"trait":"line","curve":180},{"x":-277.5,"y":2,"bCoef":0.1,"trait":"line","curve":180},{"x":-277.5,"y":-3.5,"bCoef":0.1,"trait":"line","curve":180},{"x":-277.5,"y":3.5,"bCoef":0.1,"trait":"line","curve":180},{"x":277.5,"y":1,"bCoef":0.1,"trait":"line","curve":180},{"x":277.5,"y":-1,"bCoef":0.1,"trait":"line","curve":180},{"x":277.5,"y":3,"bCoef":0.1,"trait":"line","curve":180},{"x":277.5,"y":-3,"bCoef":0.1,"trait":"line","curve":180},{"x":277.5,"y":-2,"bCoef":0.1,"trait":"line","curve":180},{"x":277.5,"y":2,"bCoef":0.1,"trait":"line","curve":180},{"x":277.5,"y":-3.5,"bCoef":0.1,"trait":"line","curve":180},{"x":277.5,"y":3.5,"bCoef":0.1,"trait":"line","curve":180}],"segments":[{"v0":6,"v1":7,"curve":0,"color":"F8F8F8","cMask":["red","blue","ball"],"trait":"goalNet","pos":[-700,-80],"y":-80},{"v0":7,"v1":8,"color":"F8F8F8","cMask":["red","blue","ball"],"trait":"goalNet","x":-590},{"v0":8,"v1":9,"curve":0,"color":"F8F8F8","cMask":["red","blue","ball"],"trait":"goalNet","pos":[-700,80],"y":80},{"v0":10,"v1":11,"curve":0,"color":"F8F8F8","cMask":["red","blue","ball"],"trait":"goalNet","pos":[700,-80],"y":-80},{"v0":11,"v1":12,"color":"F8F8F8","cMask":["red","blue","ball"],"trait":"goalNet","x":590},{"v0":12,"v1":13,"curve":0,"color":"F8F8F8","cMask":["red","blue","ball"],"trait":"goalNet","pos":[700,80],"y":80},{"v0":2,"v1":3,"trait":"kickOffBarrier"},{"v0":3,"v1":4,"curve":180,"vis":true,"color":"F8F8F8","bCoef":0.15,"cGroup":["blueKO"],"trait":"kickOffBarrier"},{"v0":3,"v1":4,"curve":-180,"vis":true,"color":"F8F8F8","bCoef":0.15,"cGroup":["redKO"],"trait":"kickOffBarrier"},{"v0":4,"v1":5,"trait":"kickOffBarrier"},{"v0":14,"v1":15,"vis":true,"color":"F8F8F8","bCoef":1.15,"cMask":["ball"],"trait":"ballArea","x":-550},{"v0":16,"v1":17,"vis":true,"color":"F8F8F8","bCoef":1.15,"cMask":["ball"],"trait":"ballArea","x":-550},{"v0":18,"v1":19,"vis":true,"color":"F8F8F8","bCoef":1,"cMask":["ball"],"trait":"ballArea","y":240},{"v0":20,"v1":21,"vis":true,"color":"F8F8F8","bCoef":1.15,"cMask":["ball"],"trait":"ballArea","x":550},{"v0":22,"v1":23,"vis":true,"color":"F8F8F8","bCoef":1.15,"cMask":["ball"],"trait":"ballArea","x":550},{"v0":24,"v1":25,"vis":true,"color":"F8F8F8","bCoef":0,"cMask":["ball"],"trait":"ballArea","x":550,"y":-240},{"v0":26,"v1":27,"curve":0,"vis":true,"color":"F8F8F8","bCoef":1,"cMask":["ball"],"trait":"ballArea","y":-240},{"v0":28,"v1":29,"vis":true,"color":"F8F8F8","bCoef":0.1,"cMask":["red","blue"],"cGroup":["redKO","blueKO"],"trait":"kickOffBarrier"},{"v0":30,"v1":31,"vis":true,"color":"F8F8F8","bCoef":0.1,"cMask":["red","blue"],"cGroup":["redKO","blueKO"],"trait":"kickOffBarrier"},{"v0":38,"v1":39,"curve":0,"vis":false,"color":"F8F8F8","bCoef":1,"cMask":["ball"],"trait":"ballArea","x":-557.5},{"v0":40,"v1":41,"curve":0,"vis":false,"color":"F8F8F8","bCoef":1,"cMask":["ball"],"trait":"ballArea","x":-557.5},{"v0":42,"v1":43,"curve":0,"vis":false,"color":"F8F8F8","bCoef":1,"cMask":["ball"],"trait":"ballArea","x":557.5},{"v0":44,"v1":45,"curve":0,"vis":false,"color":"F8F8F8","bCoef":1,"cMask":["ball"],"trait":"ballArea","x":557.5},{"v0":46,"v1":47,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":0},{"v0":48,"v1":49,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-550},{"v0":50,"v1":51,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":550},{"v0":64,"v1":65,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-381},{"v0":66,"v1":67,"curve":-90,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line"},{"v0":69,"v1":68,"curve":-90,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line"},{"v0":70,"v1":71,"curve":90,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line"},{"v0":67,"v1":71,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line"},{"v0":73,"v1":72,"curve":90,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line"},{"v0":74,"v1":75,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-240,"y":123},{"v0":76,"v1":77,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-240,"y":123},{"v0":78,"v1":79,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-240,"y":-123},{"v0":80,"v1":81,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-240,"y":-123},{"v0":82,"v1":83,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-381},{"v0":84,"v1":85,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":381},{"v0":86,"v1":87,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":381},{"v0":89,"v1":88,"curve":-90,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line"},{"v0":91,"v1":90,"curve":90,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line"},{"v0":92,"v1":93,"curve":90,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line"},{"v0":94,"v1":95,"curve":-90,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line"},{"v0":96,"v1":97,"curve":0,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":390},{"v0":99,"v1":98,"curve":180,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-375},{"v0":98,"v1":99,"curve":180,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-375},{"v0":101,"v1":100,"curve":180,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-375},{"v0":100,"v1":101,"curve":180,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-375},{"v0":103,"v1":102,"curve":180,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-375},{"v0":102,"v1":103,"curve":180,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-375},{"v0":105,"v1":104,"curve":180,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-375},{"v0":104,"v1":105,"curve":180,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-375},{"v0":107,"v1":106,"curve":180,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":375},{"v0":106,"v1":107,"curve":180,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":375},{"v0":109,"v1":108,"curve":180,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":375},{"v0":108,"v1":109,"curve":180,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":375},{"v0":111,"v1":110,"curve":180,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":375},{"v0":110,"v1":111,"curve":180,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":375},{"v0":113,"v1":112,"curve":180,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":375},{"v0":112,"v1":113,"curve":180,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":375},{"v0":115,"v1":114,"curve":180,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-277.5},{"v0":114,"v1":115,"curve":180,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-277.5},{"v0":117,"v1":116,"curve":180,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-277.5},{"v0":116,"v1":117,"curve":180,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-277.5},{"v0":119,"v1":118,"curve":180,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-277.5},{"v0":118,"v1":119,"curve":180,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-277.5},{"v0":121,"v1":120,"curve":180,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-277.5},{"v0":120,"v1":121,"curve":180,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":-277.5},{"v0":123,"v1":122,"curve":180,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":277.5},{"v0":122,"v1":123,"curve":180,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":277.5},{"v0":125,"v1":124,"curve":180,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":277.5},{"v0":124,"v1":125,"curve":180,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":277.5},{"v0":127,"v1":126,"curve":180,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":277.5},{"v0":126,"v1":127,"curve":180,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":277.5},{"v0":129,"v1":128,"curve":180,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":277.5},{"v0":128,"v1":129,"curve":180,"vis":true,"color":"F8F8F8","bCoef":0.1,"trait":"line","x":277.5}],"goals":[{"p0":[-557.5,-80],"p1":[-557.5,80],"team":"red"},{"p0":[557.5,80],"p1":[557.5,-80],"team":"blue"}],"discs":[{"radius":5,"pos":[-550,80],"color":"FF6666","trait":"goalPost","y":80},{"radius":5,"pos":[-550,-80],"color":"FF6666","trait":"goalPost","y":-80,"x":-560},{"radius":5,"pos":[550,80],"color":"6666FF","trait":"goalPost","y":80},{"radius":5,"pos":[550,-80],"color":"6666FF","trait":"goalPost","y":-80},{"radius":3,"invMass":0,"pos":[-550,240],"color":"FFCC00","bCoef":0.1,"trait":"line"},{"radius":3,"invMass":0,"pos":[-550,-240],"color":"FFCC00","bCoef":0.1,"trait":"line"},{"radius":3,"invMass":0,"pos":[550,-240],"color":"FFCC00","bCoef":0.1,"trait":"line"},{"radius":3,"invMass":0,"pos":[550,240],"color":"FFCC00","bCoef":0.1,"trait":"line"}],"planes":[{"normal":[0,1],"dist":-240,"bCoef":1,"trait":"ballArea","vis":false,"curve":0},{"normal":[0,-1],"dist":-240,"bCoef":1,"trait":"ballArea"},{"normal":[0,1],"dist":-270,"bCoef":0.1},{"normal":[0,-1],"dist":-270,"bCoef":0.1},{"normal":[1,0],"dist":-620,"bCoef":0.1},{"normal":[-1,0],"dist":-620,"bCoef":0.1},{"normal":[1,0],"dist":-620,"bCoef":0.1,"trait":"ballArea","vis":false,"curve":0},{"normal":[-1,0],"dist":-620,"bCoef":0.1,"trait":"ballArea","vis":false,"curve":0}],"traits":{"ballArea":{"vis":false,"bCoef":1,"cMask":["ball"]},"goalPost":{"radius":8,"invMass":0,"bCoef":0.5},"goalNet":{"vis":true,"bCoef":0.1,"cMask":["ball"]},"line":{"vis":true,"bCoef":0.1,"cMask":[""]},"kickOffBarrier":{"vis":false,"bCoef":0.1,"cGroup":["redKO","blueKO"],"cMask":["red","blue"]}},"playerPhysics":{"bCoef":0,"acceleration":0.11,"kickingAcceleration":0.083,"kickStrength":5},"ballPhysics":{"radius":6.25,"bCoef":0.4,"invMass":1.5,"damping":0.99,"color":"FFCC00"}}`
/* OPCIONES */

var afkLimit = 30; // limite de afk (30 segundos)
var drawTimeLimit = 20; // minutos
var maxTeamSize = 3; // maximo jugadores en equipo
var slowMode = 0;

/* JUGADORES */

const Team = {
    SPECTATORS: 0,
    RED: 1,
    BLUE: 2
};
var extendedP = [];
const eP = {
    ID: 0,
    AUTH: 1,
    CONN: 2,
    AFK: 3,
    ACT: 4,
    GK: 5,
    MUTE: 6
};
const Ss = {
    GA: 0, // Goles anotados
    WI: 1, // Victorias
    DR: 2, // Derrotas
    LS: 3, // Vallas invictas
    WR: 4, // Porcentaje de victorias
    GL: 5, // Goles
    AS: 6, // Asistencias
    GK: 7, // Arqueros
    CS: 8, // Vallas invictas
    CP: 9, // Porcentaje de vallas invictas
    RL: 10, // Rango
    NK: 11, // Nuevos puntos
    PT: 12  // Puntos totales
}
var players;
var TeamR;
var TeamB;
var teamS;
var messageHistory = [0, 0, 0, 0, 0, 0];
var messageCounter = 0;

/* JUEGO */

let link = ['https://www.haxball.com/play?c=_', 'https://www.haxball.com', 'haxball.com', '.com', 'https://', 'https:', 'https://www.'];



var lastTeamTouched; // registro ultimo en tocar la pelota
var lastPlayersTouched; // II
var countAFK = false; // mejor control de actividad
var activePlay = false; // mejor control de posesion de pelota
var goldenGoal = false;
var SMSet = new Set(); // creado para cambiar al choosemode
var banList = []; // creado para modificar listas ban

/* ESTADISTICAS */

var game;
var GKList = ["", ""];
var Rposs = 0;
var Bposs = 0;
var point = [{
    "x": 0,
    "y": 0
}, {
    "x": 0,
    "y": 0
}]; // creado para saber velocidad de pelota
var ballSpeed;
var lastWinner = Team.SPECTATORS;
var streak = 0;
var allBlues = []; // lista para contar a los jugadores del equipo en estadisticas
var allReds = [];

/* EQUILIBRIO Y MODO ELECCION JUGADORES */

var inChooseMode = false; // cambiar modo de juego
var redCaptainChoice = "";
var blueCaptainChoice = "";
var chooseTime = 20;
var timeOutCap;

/* AUXILIAR */

var checkTimeVariable = false; // variable finaliza en tiempo limite
var announced = false;
var statNumber = 0; // permite recibir info en la sala cada "X" minutos
var endGameVariable = false; // ayuda a distinguir interrupciones en el partido por abandono de jugadores, etc
var resettingTeams = false;
var capLeft = false;
var statInterval = 6;

loadMap(practiceMap, scoreLimitPractice, timeLimitPractice);

/* OBJETOS */

function Goal(time, team, striker, assist) {
    this.time = time;
    this.team = team;
    this.striker = striker;
    this.assist = assist;
}

function Game(date, scores, goals) {
    this.date = date;
    this.scores = scores;
    this.goals = goals;
}

// function setRegister(player, senha) {
//    if (registro.get(player.name)) room.sendAnnouncement('Você já está registrado.', player.id);
//    else {
//        registro.set(player.name, senha);
//        localStorage.setItem("registros", JSON.stringify([...registro]));
//        room.sendAnnouncement('Registrado!', player.id, 0x2FE436);
//        room.sendAnnouncement(`Contraseña: ${senha}`, player.id, 0x2FE436);
//    }
//}

//function getLogin(player, senha) {
//    if (registro.get(player.name)) {
//        if (registro.get(player.name) == senha) {
//            room.sendAnnouncement(`${player.name} logou!`, null, 0x2FE436);
//        } else room.sendAnnouncement('Contraseña incorrecta.', player.id, 0xFF0000);
//    } else room.sendAnnouncement('No estas registrado.', player.id, 0xFF0000);
//}

/* FUNCIONES */

function centerText(string) {
    var space = parseInt((80 - string.length) * 0.8, 10);
    if (space <= 0) {
        return '';
    }
    return ' '.repeat(space) + string + ' '.repeat(space);
};


/* GOL A FAVOR */
function golAFavor (goaler){
    var messages = [
        "GOOOOL " + goaler.name + " LA RECONCHA DE SU MADRE! ¡A ustedes, zurditos de mierda! ¡Esto no se consigue llorando!",
        "GOOOOL " + goaler.name + " ¡Sigan llorando, progres! ¡Acá se gana con huevo, no con favores del Estado!",
        "GOOOOL "  + goaler.name + " PARA USTEDES MANGA DE INÚTILES! ¡Kirchneristas de mierda, aprendan a jugar en vez de pedir plata y subsidios!",
        "GOOOOL " + goaler.name + "¡Socialistas de mierda, les dejamos el culo como un mandril!",
        "GOOOOL, CÓMO LOS CAGÓ! " + goaler.name + " ¡Manga de parásitos!" 

    ];
    var randomIndex = Math.floor(Math.random() * messages.length);
    var announcement = messages[randomIndex];
    setTimeout(function () {
        room.sendAnnouncement(centerText(announcement), null, Cor.White, "bold");
    }, 3000);
};

/* ASISTENCIA */
function asistencia(assistant){
    var messages = [
       
      "¡¡¡ASISTENCIAAAAAA DE " + assistant.name + "!!! ¡Mirá lo que es esto, kirchnerista de mierda! ¡Acá no se pide limosna, se juega con huevos y sin depender de nadie! ¡Dejá de robar y hacete cargo de algo alguna vez, forro!",

      "Qué asistencia metió " + assistant.name + ", zurdos pelotudos! ¡Esto no es un plan social, papá! ¡No venís a regalarle nada a nadie, se labura, se juega, y se gana, no se espera regalos de nadie!",

      "¡¡¡ASISTENCIA TUYA " + assistant.name + "!!! ¡Para vos, progres hijo de puta! ¡Dejá de llorar por el Estado y ponete a laburar, inútil!",

      "¡Vamos carajo, asistencia de  la puta madre " + assistant.name + "! ¡No como esos socialistas de mierda que esperan que todo se lo den en bandeja! ¡No jodan, esto se hace con trabajo, no con campañas del miedo!",

      "ASISTENCIA TUYA, SI, TUYA NENE " + assistant.name + " ¡Para los que piensan que el fútbol se gana con palancas políticas, que la chupen, y que la sigan chupando! ¡Esto es talento, pelotudos! ¡Nada de andar llorando en la tribuna ni esperando que alguien te haga el favor!"
   ];
   var randomIndex = Math.floor(Math.random() * messages.length);
    var announcement = messages[randomIndex];
    setTimeout(function () {
        room.sendAnnouncement(centerText(announcement), null, Cor.White, "bold");
    }, 3000);
};


/* GOL ENCONTRA */
function golcontra(goaler) {
    var messages = [
        "¡¿QUÉ CARAJO HICISTE FORRO " + goaler.name + "?! ¡Gol encontra, LA PUTA MADRE QUE TE RE MIL PARIÓ! ¡No puede ser, ¿en qué cabeza cabe hacer semejante estupidez? ¡Increíble! ¡Esto es un chiste, no sé si reírme o llorar de la vergüenza!",

        "¡NO LO PUEDO CREER, HIJO DE PUTA! ¡¿Gol encontra?! ¡¿ESTO QUÉ ES, UNA BURLA?! " + goaler.name + " acabaS de cagar todo el partido, no podés ser TAN imbécil, la puta que te parió!",

        "¡LA RECONCHA DE SU MADRE! ¡Gol encontra, y el pelotudo ni se da cuenta! ¡Se nota que no te importa nada " + goaler.name + ", forro! ¡Esto es una cagada de proporciones bíblicas, nos cagaron el partido y no podemos hacer nada más que mirar!",

        "¡POR DIOS, QUÉ HIJO DE MIL PUTA! ¡Gol encontra de " + goaler.name + " un pobre pelotudo que no sabe ni dónde está! ¡Esto no es fútbol, esto es una bolsa de gente que no tiene ni idea lo que hace!",

        "¡LA CONCHA DE SU MADRE, UN GOL ENCONTRA MÁS! ¡Y encima, el idiota lo festeja como si hubiera hecho algo bien! ¡¿Te das cuenta de lo que hiciste, hijo de puta?! " + goaler.name ,

        "Estoy seguro de que fue sin querer, " + goaler.name + "?",
        "ESTÁS JUGANDO EN EL EQUIPO EQUIVOCADO, " + goaler.name,
        "FELICITACIONES, " + goaler.name + " EL EQUIPO CONTRARIO AGRADECE!",
        "Tip PRO " + goaler.name + ": La próxima vez... NO APUNTES A TU ARCO!!",
        goaler.name + " ¿Quién soy yo para juzgar? El que juzgó murió en la cruz."
    ];
    var randomIndex = Math.floor(Math.random() * messages.length);
    var announcement = messages[randomIndex];
    setTimeout(function () {
        room.sendAnnouncement(centerText(announcement), null, Cor.White, "bold");
    }, 3000);
};


/* FUNCIONES AUXILIARES */

function getRandomInt(max) { // retorna un número aleatorio de 0 a max-1
    return Math.floor(Math.random() * Math.floor(max));
}

function getTime(scores) { // retorna la hora actual del juego
    return "[" + Math.floor(Math.floor(scores.time / 60) / 10).toString() + Math.floor(Math.floor(scores.time / 60) % 10).toString() + ":" + Math.floor(Math.floor(scores.time - (Math.floor(scores.time / 60) * 60)) / 10).toString() + Math.floor(Math.floor(scores.time - (Math.floor(scores.time / 60) * 60)) % 10).toString() + "]"
}

function pointDistance(p1, p2) {
    var d1 = p1.x - p2.x;
    var d2 = p1.y - p2.y;
    return Math.sqrt(d1 * d1 + d2 * d2);
}

/* BOTONES */

function download(conteudo, nomeDoArquivo, tipoDeArquivo) {
    let blob = new Blob([conteudo], {
        type: tipoDeArquivo
    });
    const link = window.document.createElement('a');
    link.href = window.URL.createObjectURL(blob);
    link.download = nomeDoArquivo;
    link.click();
    window.URL.revokeObjectURL(link.href);
}

function topBtn() {
    if (teamS.length == 0) {
        return;
    } else {
        if (TeamR.length == TeamB.length) {
            if (teamS.length > 1) {
                room.setPlayerTeam(teamS[0].id, Team.RED);
                room.setPlayerTeam(teamS[1].id, Team.BLUE);
            }
            return;
        } else if (TeamR.length < TeamB.length) {
            room.setPlayerTeam(teamS[0].id, Team.RED);
        } else {
            room.setPlayerTeam(teamS[0].id, Team.BLUE);
        }
    }
}

function randomBtn() {
    if (teamS.length == 0) {
        return;
    } else {
        if (TeamR.length == TeamB.length) {
            if (teamS.length > 1) {
                var r = getRandomInt(teamS.length);
                room.setPlayerTeam(teamS[r].id, Team.RED);
                teamS = teamS.filter((spec) => spec.id != teamS[r].id);
                room.setPlayerTeam(teamS[getRandomInt(teamS.length)].id, Team.BLUE);
            }
            return;
        } else if (TeamR.length < TeamB.length) {
            room.setPlayerTeam(teamS[getRandomInt(teamS.length)].id, Team.RED);
        } else {
            room.setPlayerTeam(teamS[getRandomInt(teamS.length)].id, Team.BLUE);
        }
    }
}

function blueToSpecBtn() {
    resettingTeams = true;
    setTimeout(() => {
        resettingTeams = false;
    }, 100);
    for (var i = 0; i < TeamB.length; i++) {
        room.setPlayerTeam(TeamB[TeamB.length - 1 - i].id, Team.SPECTATORS);
    }
}

function redToSpecBtn() {
    resettingTeams = true;
    setTimeout(() => {
        resettingTeams = false;
    }, 100);
    for (var i = 0; i < TeamR.length; i++) {
        room.setPlayerTeam(TeamR[TeamR.length - 1 - i].id, Team.SPECTATORS);
    }
}

function resetBtn() {
    resettingTeams = true;
    setTimeout(() => {
        resettingTeams = false;
    }, 100);
    if (TeamR.length <= TeamB.length) {
        for (var i = 0; i < TeamR.length; i++) {
            room.setPlayerTeam(TeamB[TeamB.length - 1 - i].id, Team.SPECTATORS);
            room.setPlayerTeam(TeamR[TeamR.length - 1 - i].id, Team.SPECTATORS);
        }
        for (var i = TeamR.length; i < TeamB.length; i++) {
            room.setPlayerTeam(TeamB[TeamB.length - 1 - i].id, Team.SPECTATORS);
        }
    } else {
        for (var i = 0; i < TeamB.length; i++) {
            room.setPlayerTeam(TeamB[TeamB.length - 1 - i].id, Team.SPECTATORS);
            room.setPlayerTeam(TeamR[TeamR.length - 1 - i].id, Team.SPECTATORS);
        }
        for (var i = TeamB.length; i < TeamR.length; i++) {
            room.setPlayerTeam(TeamR[TeamR.length - 1 - i].id, Team.SPECTATORS);
        }
    }
}

function blueToRedBtn() {
    resettingTeams = true;
    setTimeout(() => {
        resettingTeams = false;
    }, 100);
    for (var i = 0; i < TeamB.length; i++) {
        room.setPlayerTeam(TeamB[i].id, Team.RED);
    }
}

/* FUNCIONES DE JUEGO */

function checkTime() {
    const scores = room.getScores();
    game.scores = scores;
    if (Math.abs(scores.time - scores.timeLimit) <= 0.01 && scores.timeLimit != 0) {
        if (scores.red != scores.blue) {
            if (checkTimeVariable == false) {
                checkTimeVariable = true;
                setTimeout(() => {
                    checkTimeVariable = false;
                }, 3000);
                scores.red > scores.blue ? endGame(Team.RED) : endGame(Team.BLUE);
                setTimeout(() => {
                    room.stopGame();
                }, 2000);
            }
            return;
        }
        goldenGoal = false;
       // room.sendAnnouncement("⚽ Gol de Oro!", null, 0xF1AF09);
        room.sendAnnouncement(centerText("QUE MALOS QUE SON ESTOS GORDOS!"), null, Cor.Amarelo, "bold");
       // room.sendAnnouncement(centerText("LES VOY A DAR " + drawTimeLimit * 60 + " segundos!"), null, Cor.White, "normal");
        room.sendAnnouncement(centerText("⚽ EL QUE NO HACE GOL ES TROLO! ⚽"), null, Cor.White, "normal");
        
    }
    if (scores.time > scores.timeLimit + drawTimeLimit * 60 - 15 && scores.time <= scores.timeLimit + drawTimeLimit * 60) {
        if (checkTimeVariable == false && announced == false) {
            checkTimeVariable = true;
            announced = true;
            setTimeout(() => {
                checkTimeVariable = false;
            }, 10);
            room.sendAnnouncement(centerText("⌛ ¡15 segundos para el empate!"), null, Cor.Amarelo, "bold");
        }
    }
    if (scores.time > (scores.timeLimit + drawTimeLimit * 60)) {
        if (checkTimeVariable == false) {
            checkTimeVariable = true;
            setTimeout(() => { checkTimeVariable = false; }, 10);
            endGame(Team.SPECTATORS);
            room.stopGame();
            goldenGoal = false;
        }
    }
};

function endGame(winner) {
    players.length >= 2 * maxTeamSize - 1 ? activateChooseMode() : null;
    const scores = room.getScores();
    game.scores = scores;
    Rposs = Rposs / (Rposs + Bposs);
    Bposs = 1 - Rposs;
    lastWinner = winner;
    endGameVariable = true;
    if (winner == Team.RED) {
        streak++;
        room.sendAnnouncement(centerText("🏆 Equipo rojo ganó! | Secuencia de Victoria(s):") + streak + " 🏆", null, 0xFDC43A);
    } else if (winner == Team.BLUE) {
        streak = 1;
        room.sendAnnouncement(centerText("🏆 ¡El equipo azul ganó! | Secuencia de Victoria(s):") + streak + " 🏆", null, 0xFDC43A);
    } else {
        streak = 0;
        room.sendAnnouncement("💤 Tiempo limite alcanzado");
    }
    room.sendAnnouncement(centerText("🏆 FIN DE PARTIDA 🏆"), null, Cor.White, "bold");
    room.sendAnnouncement(centerText(" " + scores.red + " - " + scores.blue), null, Cor.White, "normal");
    room.sendAnnouncement(centerText((Rposs * 100).toPrecision(3).toString() + "% | Posesion de pelota | " + (Bposs * 100).toPrecision(3).toString() + "% "), null, Cor.White, "normal");
    scores.red == 0 ? (scores.blue == 0 ? room.sendAnnouncement("🥅 " + GKList[0].name + " es un hombre? no, es una barrera! " + GKList[1].name + " no recibió goles. ", null, 0xFDC43A) : room.sendAnnouncement("🥅 es un hombre? no, es una barrera! " + GKList[1].name + " no recibió goles ", null,  0xFDC43A)) : scores.blue == 0 ? room.sendAnnouncement("🥅 es un hombre? no, es una barrera! " + GKList[0].name + " no recibió goles ", null, 0xFDC43A) : null;
    updateStats();
    showFinalResults(allReds, allBlues);
}

function quickRestart() {
    room.stopGame();
    setTimeout(() => {
        room.startGame();
    }, 2000);
}

function resumeGame() {
    setTimeout(() => {
        room.startGame();
    }, 2000);
    setTimeout(() => {
        room.pauseGame(false);
    }, 1000);
}

function activateChooseMode() {
    inChooseMode = true;
    slowMode = 2;
    room.sendAnnouncement("Modo de elección de jugadores activado!", null, 0x55bae2, "normal");
}

function deactivateChooseMode() {
    inChooseMode = false;
    clearTimeout(timeOutCap);
    if (slowMode != 0) {
        slowMode = 0;
        room.sendAnnouncement("Modo de elección de jugadores finalizado.", null, 0xf2a000, "normal");
    }
    redCaptainChoice = "";
    blueCaptainChoice = "";
}

function loadMap(map, scoreLim, timeLim) {
    if (map != '') {
        room.setCustomStadium(map);
    } else {
        console.log("dio un error cargando el estadio")
        room.setDefaultStadium("Classic");
    }
    room.setScoreLimit(scoreLim);
    room.setTimeLimit(timeLim);
}

/* FUNCIONES DE JUGADOR */

function updateTeams() { // actualiza la lista de jugadores y la lista de todos los equipos
    players = room.getPlayerList().filter((player) => player.id != 0 && !getAFK(player));
    TeamR = players.filter(p => p.team === Team.RED);
    TeamB = players.filter(p => p.team === Team.BLUE);
    teamS = players.filter(p => p.team === Team.SPECTATORS);
}

function handleInactivity() { // maneja la inactividad: los jugadores serán expulsados ​​después de afkLimit
    if (countAFK && (TeamR.length + TeamB.length) > 1) {
        for (var i = 0; i < TeamR.length; i++) {
            setActivity(TeamR[i], getActivity(TeamR[i]) + 1);
        }
        for (var i = 0; i < TeamB.length; i++) {
            setActivity(TeamB[i], getActivity(TeamB[i]) + 1);
        }
    }
    for (var i = 0; i < extendedP.length; i++) {
        if (extendedP[i][eP.ACT] == 60 * (2 / 3 * afkLimit)) {
            room.sendAnnouncement("@" + room.getPlayer(extendedP[i][eP.ID]).name + ", si no te mueves en los próximos " + Math.floor(afkLimit / 3) + " segundos, seras kickeado!", extendedP[i][eP.ID], 0xf4a404, "bold", 2);
        }
        if (extendedP[i][eP.ACT] >= 60 * afkLimit) {
            extendedP[i][eP.ACT] = 0;
            if (room.getScores().time <= afkLimit - 0.5) {
                setTimeout(() => {
                    !inChooseMode ? quickRestart() : room.stopGame();
                }, 10);
            }
            room.kickPlayer(extendedP[i][eP.ID], "AFK", false);
        }
    }
}

function getAuth(player) {
    return extendedP.filter((a) => a[0] == player.id) != null ? extendedP.filter((a) => a[0] == player.id)[0][eP.AUTH] : null;
}

function getAFK(player) {
    return extendedP.filter((a) => a[0] == player.id) != null ? extendedP.filter((a) => a[0] == player.id)[0][eP.AFK] : null;
}

function setAFK(player, value) {
    extendedP.filter((a) => a[0] == player.id).forEach((player) => player[eP.AFK] = value);
}

function getActivity(player) {
    return extendedP.filter((a) => a[0] == player.id) != null ? extendedP.filter((a) => a[0] == player.id)[0][eP.ACT] : null;
}

function setActivity(player, value) {
    extendedP.filter((a) => a[0] == player.id).forEach((player) => player[eP.ACT] = value);
}

function getGK(player) {
    return extendedP.filter((a) => a[0] == player.id) != null ? extendedP.filter((a) => a[0] == player.id)[0][eP.GK] : null;
}

function setGK(player, value) {
    extendedP.filter((a) => a[0] == player.id).forEach((player) => player[eP.GK] = value);
}

function getMute(player) {
    return extendedP.filter((a) => a[0] == player.id) != null ? extendedP.filter((a) => a[0] == player.id)[0][eP.MUTE] : null;
}

function setMute(player, value) {
    extendedP.filter((a) => a[0] == player.id).forEach((player) => player[eP.MUTE] = value);
}

/* BALANCEO DE EQUIPOS Y FUNCIONES DE ELECCION DE JUGADORES */

function updateRoleOnPlayerIn() {
    updateTeams();
    if (inChooseMode) {
        if (players.length == 6) {
            loadMap(practiceMap, scoreLimitPractice, timeLimitp);
        }
        getSpecList(TeamR.length <= TeamB.length ? TeamR[0] : TeamB[0]);
    }
    balanceTeams();
}

function updateRoleOnPlayerOut() {
    updateTeams();
    if (room.getScores() != null) {
        var scores = room.getScores();
        if (players.length >= 2 * maxTeamSize && scores.time >= (5 / 6) * game.scores.timeLimit && TeamR.length != TeamB.length) {
            if (TeamR.length < TeamB.length) {
                if (scores.blue - scores.red == 2) {
                    endGame(Team.BLUE);
                   // room.sendChat("🤖 Ragequit 🤖");
                    room.sendAnnouncement("[GORDO ANTIKUKA] Ragequit por parte del equipo rojo detectado, partido terminado!", null, 0xbfff00, "normal");
                    setTimeout(() => {
                        room.stopGame();
                    }, 100);
                    return;
                }
            } else {
                if (scores.red - scores.blue == 2) {
                    endGame(Team.RED);
                   // room.sendChat("🤖 Ragequit 🤖");
                    room.sendAnnouncement("[GORDO ANTIKUKA] Ragequit por parte del equipo azul detectado, partido terminado!", null, 0xbfff00, "normal");
                    setTimeout(() => {
                        room.stopGame();
                    }, 100);
                    return;
                }
            }
        }
    }
    if (inChooseMode) {
        if (players.length < 6) {
            loadMap(practiceMap, scoreLimitPractice, timeLimitPractice);
        }
        if (TeamR.length == 0 || TeamB.length == 0) {
            TeamR.length == 0 ? room.setPlayerTeam(teamS[0].id, Team.RED) : room.setPlayerTeam(teamS[0].id, Team.BLUE);
            return;
        }
        if (Math.abs(TeamR.length - TeamB.length) == teamS.length) {
            // room.sendChat("Sin alternativas, déjame manejar esta situación. ...");
            room.sendAnnouncement("[GORDO ANTIKUKA] Sin posibilidad de reclutamiento, déjame decidir...", null, 0xc0bdb1, "normal");
            deactivateChooseMode();
            resumeGame();
            var b = teamS.length;
            if (TeamR.length > TeamB.length) {
                for (var i = 0; i < b; i++) {
                    setTimeout(() => {
                        room.setPlayerTeam(teamS[0].id, Team.BLUE);
                    }, 5 * i);
                }
            } else {
                for (var i = 0; i < b; i++) {
                    setTimeout(() => {
                        room.setPlayerTeam(teamS[0].id, Team.RED);
                    }, 5 * i);
                }
            }
            return;
        }
        if (streak == 0 && room.getScores() == null) {
            if (Math.abs(TeamR.length - TeamB.length) == 2) { // si alguien sale de un equipo ya formado, dejando así 2 jugadores, devuelva el último elegido a los espectadores para que sea justo
              // room.sendChat("🤖 Equilibrando equipos... 🤖");
                room.sendAnnouncement("Equilibrando equipos...", null, 0xc0bdb1, "normal");
                TeamR.length > TeamB.length ? room.setPlayerTeam(TeamR[TeamR.length - 1].id, Team.SPECTATORS) : room.setPlayerTeam(TeamB[TeamB.length - 1].id, Team.SPECTATORS);
            }
        }
        if (TeamR.length == TeamB.length && teamS.length < 2) {
            deactivateChooseMode();
            resumeGame();
            return;
        }
        capLeft ? choosePlayer() : getSpecList(TeamR.length <= TeamB.length ? TeamR[0] : TeamB[0]);
    }
    balanceTeams();
}

function balanceTeams() {
    if (!inChooseMode) {
        if (players.length == 1 && TeamR.length == 0) { // 1 jugador
            quickRestart();
            loadMap(practiceMap, scoreLimitPractice, timeLimitPractice);
            room.setPlayerTeam(players[0].id, Team.RED);
        } else if (Math.abs(TeamR.length - TeamB.length) == teamS.length && teamS.length > 0) { // jugadores específicos proporcionan jugadores requeridos
            const n = Math.abs(TeamR.length - TeamB.length);
            if (TeamR.length > TeamB.length) {
                for (var i = 0; i < n; i++) {
                    room.setPlayerTeam(teamS[i].id, Team.BLUE);
                }
            } else {
                for (var i = 0; i < n; i++) {
                    room.setPlayerTeam(teamS[i].id, Team.RED);
                }
            }
        } else if (Math.abs(TeamR.length - TeamB.length) > teamS.length) { // no hay jugadores suficientes
            const n = Math.abs(TeamR.length - TeamB.length);
            if (players.length == 1) {
                quickRestart();
                loadMap(practiceMap, scoreLimitPractice, timeLimitPractice);
                room.setPlayerTeam(players[0].id, Team.RED);
                return;
            } else if (players.length == 6) {
                quickRestart();
                loadMap(practiceMap, scoreLimitPractice, timeLimitp);
            }
            if (players.length == maxTeamSize * 2 - 1) {
                allReds = [];
                allBlues = [];
            }
            if (TeamR.length > TeamB.length) {
                for (var i = 0; i < n; i++) {
                    room.setPlayerTeam(TeamR[TeamR.length - 1 - i].id, Team.SPECTATORS);
                }
            } else {
                for (var i = 0; i < n; i++) {
                    room.setPlayerTeam(TeamB[TeamB.length - 1 - i].id, Team.SPECTATORS);
                }
            }
        } else if (Math.abs(TeamR.length - TeamB.length) < teamS.length && TeamR.length != TeamB.length) { // modo de eleccion de jugadores
            room.pauseGame(true);
            activateChooseMode();
            choosePlayer();
        } else if (teamS.length >= 2 && TeamR.length == TeamB.length && TeamR.length < maxTeamSize) { // 2 en rojo, 2 en azul y 2 o mas especificaciones
            if (TeamR.length == 2) {
                quickRestart();
                if (!teamS.length == 2) {
                    loadMap(practiceMap, scoreLimitPractice, timeLimitp);
                }
            }
            topBtn();
        }
    }
}

function choosePlayer() {
    clearTimeout(timeOutCap);
    if (TeamR.length <= TeamB.length && TeamR.length != 0) {
        room.sendAnnouncement("[GORDO ANTIKUKA] Para elegir un jugador, introduzca su número de lista o use 'top', 'random' o 'bottom'.", TeamR[0].id, 0x5db5db, "normal");
        timeOutCap = setTimeout(function(player) {
            room.sendAnnouncement("Apurate zurdo, @" + player.name + ", te quedan " + Number.parseInt(chooseTime / 2) + " segundos para elegir algun gordo!", player.id, 0xf2a000, "normal");
            timeOutCap = setTimeout(function(player) {
                room.kickPlayer(player.id, "No elegiste a tiempo, lloralo!", false);
            }, chooseTime * 500, TeamR[0]);
        }, chooseTime * 1000, TeamR[0]);
    } else if (TeamB.length < TeamR.length && TeamB.length != 0) {
        room.sendAnnouncement("[GORDO ANTIKUKA] Para elegir un jugador, introduzca su número de lista o use 'top', 'random' o 'bottom'.", TeamB[0].id, 0x5db5db, "normal");
        timeOutCap = setTimeout(function(player) {
            room.sendAnnouncement("Apurate zurdo, @" + player.name + ", te quedan " + Number.parseInt(chooseTime / 2) + " segundos para elegir algun gordo!", player.id, 0xf2a000, "normal");
            timeOutCap = setTimeout(function(player) {
                room.kickPlayer(player.id, "No elegiste a tiempo, abrazo!", false);
            }, chooseTime * 500, TeamB[0]);
        }, chooseTime * 1000, TeamB[0]);
    }
    if (TeamR.length != 0 && TeamB.length != 0) getSpecList(TeamR.length <= TeamB.length ? TeamR[0] : TeamB[0]);
}

function getSpecList(player) {
    var cstm = "[Eleccion] Jugadores: ";
    for (var i = 0; i < teamS.length; i++) {
        if (140 - cstm.length < (teamS[i].name + "[" + (i + 1) + "], ").length) {
            room.sendChat(cstm, player.id);
            cstm = "... ";
        }
        cstm += teamS[i].name + "[" + (i + 1) + "], ";
    }
    cstm = cstm.substring(0, cstm.length - 2);
    cstm += ".";
    room.sendAnnouncement(cstm, player.id, 0xebeb09, "normal");
}

/* FUNCIONES DE ESTADISTICAS */

function getLastTouchOfTheBall() {
    const ballPosition = room.getBallPosition();
    updateTeams();
    for (var i = 0; i < players.length; i++) {
        if (players[i].position != null) {
            var distanceToBall = pointDistance(players[i].position, ballPosition);
            if (distanceToBall < triggerDistance) {
                !activePlay ? activePlay = true : null;
                if (lastTeamTouched == players[i].team && lastPlayersTouched[0] != null && lastPlayersTouched[0].id != players[i].id) {
                    lastPlayersTouched[1] = lastPlayersTouched[0];
                    lastPlayersTouched[0] = players[i];
                }
                lastTeamTouched = players[i].team;
            }
        }
    }
}

function getStats() { // Da posesión, velocidad del balón y GK de cada equipo
    if (activePlay) {
        updateTeams();
        lastTeamTouched == Team.RED ? Rposs++ : Bposs++;
        var ballPosition = room.getBallPosition();
        point[1] = point[0];
        point[0] = ballPosition;
        ballSpeed = (pointDistance(point[0], point[1]) * 60 * 60 * 60) / 15000;
        var k = [-1, Infinity];
        for (var i = 0; i < TeamR.length; i++) {
            if (TeamR[i].position.x < k[1]) {
                k[0] = TeamR[i];
                k[1] = TeamR[i].position.x;
            }
        }
        k[0] != -1 ? setGK(k[0], getGK(k[0]) + 1) : null;
        k = [-1, -Infinity];
        for (var i = 0; i < TeamB.length; i++) {
            if (TeamB[i].position.x > k[1]) {
                k[0] = TeamB[i];
                k[1] = TeamB[i].position.x;
            }
        }
        k[0] != -1 ? setGK(k[0], getGK(k[0]) + 1) : null;
        findGK();
    }
}

function updateStats() {
    if (players.length >= 2 * maxTeamSize && (game.scores.time >= (5 / 6) * game.scores.timeLimit || game.scores.red == game.scores.scoreLimit || game.scores.blue == game.scores.scoreLimit) && allReds.length >= maxTeamSize && allBlues.length >= maxTeamSize) {
        var stats;

        // Puntos por victoria y derrota
        var redVictoryPoints = lastWinner == Team.RED ? 15 : -5; // Cambiado a 15 puntos por victoria
        var blueVictoryPoints = lastWinner == Team.BLUE ? 15 : -5; // Cambiado a 15 puntos por victoria

        // Actualizar estadísticas de los jugadores del equipo rojo
        for (var i = 0; i < allReds.length; i++) {
            stats = localStorage.getItem(getAuth(allReds[i])) ? JSON.parse(localStorage.getItem(getAuth(allReds[i]))) : [0, 0, 0, 0, "0.00", 0, 0, 0, 0, "0.00", "player", allReds[i].name, 0];

            stats[Ss.NK] += redVictoryPoints; // Sumar puntos por victoria o restar por derrota
            stats[Ss.WI] += (lastWinner == Team.RED ? 1 : 0);
            stats[Ss.LS] += (lastWinner == Team.BLUE ? 1 : 0);
            stats[Ss.WR] = (100 * stats[Ss.WI] / (stats[Ss.WI] + stats[Ss.LS])).toPrecision(3);
            
            // Actualiza los puntos totales
            stats[Ss.PT] += stats[Ss.NK];
            
            localStorage.setItem(getAuth(allReds[i]), JSON.stringify(stats));
        }

        // Actualizar estadísticas de los jugadores del equipo azul
        for (var i = 0; i < allBlues.length; i++) {
            stats = localStorage.getItem(getAuth(allBlues[i])) ? JSON.parse(localStorage.getItem(getAuth(allBlues[i]))) : [0, 0, 0, 0, "0.00", 0, 0, 0, 0, "0.00", "player", allBlues[i].name, 0];

            stats[Ss.NK] += blueVictoryPoints; // Sumar puntos por victoria o restar por derrota
            stats[Ss.WI] += (lastWinner == Team.BLUE ? 1 : 0);
            stats[Ss.LS] += (lastWinner == Team.RED ? 1 : 0);
            stats[Ss.WR] = (100 * stats[Ss.WI] / (stats[Ss.WI] + stats[Ss.LS])).toPrecision(3);
            
            // Actualiza los puntos totales
            stats[Ss.PT] += stats[Ss.NK];
            
            localStorage.setItem(getAuth(allBlues[i]), JSON.stringify(stats));
        }

        // Actualizar puntos por goles y asistencias
        for (var i = 0; i < game.goals.length; i++) {
            if (game.goals[i].striker != null) {
                stats = JSON.parse(localStorage.getItem(getAuth(game.goals[i].striker)));
                stats[Ss.GL]++;
                stats[Ss.NK] += 5; // Sumar puntos por gol
                stats[Ss.PT] += 5; // Actualiza los puntos totales
                localStorage.setItem(getAuth(game.goals[i].striker), JSON.stringify(stats));
            }
            if (game.goals[i].assist != null) {
                stats = JSON.parse(localStorage.getItem(getAuth(game.goals[i].assist)));
                stats[Ss.AS]++;
                stats[Ss.NK] += 3; // Sumar puntos por asistencia
                stats[Ss.PT] += 3; // Actualiza los puntos totales
                localStorage.setItem(getAuth(game.goals[i].assist), JSON.stringify(stats));
            }
        }

        // Actualizar puntos por vallas invictas
        if (allReds.findIndex((player) => player.id == GKList[0].id) != -1) {
            stats = JSON.parse(localStorage.getItem(getAuth(GKList[0])));
            stats[Ss.GK]++;
            if (game.scores.blue == 0) {
                stats[Ss.CS]++;
                stats[Ss.NK] += 4; // Sumar puntos por valla invicta stats[Ss.PT] += 4; // Actualiza los puntos totales
            }
            stats[Ss.CP] = (100 * stats[Ss.CS] / stats[Ss.GK]).toPrecision(3);
            localStorage.setItem(getAuth(GKList[0]), JSON.stringify(stats));
        }
        if (allBlues.findIndex((player) => player.id == GKList[1].id) != -1) {
            stats = JSON.parse(localStorage.getItem(getAuth(GKList[1])));
            stats[Ss.GK]++;
            if (game.scores.red == 0) {
                stats[Ss.CS]++;
                stats[Ss.NK] += 4; // Sumar puntos por valla invicta
                stats[Ss.PT] += 4; // Actualiza los puntos totales
            }
            stats[Ss.CP] = (100 * stats[Ss.CS] / stats[Ss.GK]).toPrecision(3);
            localStorage.setItem(getAuth(GKList[1]), JSON.stringify(stats));
        }
    }
}

function showFinalResults(redPlayers, bluePlayers) {
    let message = "Resultados del partido:\n\n";

    // Mostrar resultados para el equipo rojo
    message += "Equipo RED:\n";
    redPlayers.forEach(player => {
        let stats = JSON.parse(localStorage.getItem(getAuth(player))); // Obtener estadísticas del jugador
        let pointsThisMatch = calculatePoints(player); // Función que calcula los puntos del jugador en este partido
        let totalPoints = stats[Ss.PT]; // Total de puntos acumulados

        message += `- ${player.name} + ${pointsThisMatch} pts (${totalPoints})\n`;
    });

    // Mostrar resultados para el equipo azul
    message += "\nEquipo BLUE:\n";
    bluePlayers.forEach(player => {
        let stats = JSON.parse(localStorage.getItem(getAuth(player))); // Obtener estadísticas del jugador
        let pointsThisMatch = calculatePoints(player); // Función que calcula los puntos del jugador en este partido
        let totalPoints = stats[Ss.PT]; // Total de puntos acumulados

        message += `- ${player.name} + ${pointsThisMatch} pts (${totalPoints})\n`;
    });

    // Enviar el mensaje al chat
    room.sendAnnouncement(message, null, 0xFFFFFF);
}

function findGK() {
    var tab = [
        [-1, ""],
        [-1, ""]
    ];
    for (var i = 0; i < extendedP.length; i++) {
        if (room.getPlayer(extendedP[i][eP.ID]) != null && room.getPlayer(extendedP[i][eP.ID]).team == Team.RED) {
            if (tab[0][0] < extendedP[i][eP.GK]) {
                tab[0][0] = extendedP[i][eP.GK];
                tab[0][1] = room.getPlayer(extendedP[i][eP.ID]);
            }
        } else if (room.getPlayer(extendedP[i][eP.ID]) != null && room.getPlayer(extendedP[i][eP.ID]).team == Team.BLUE) {
            if (tab[1][0] < extendedP[i][eP.GK]) {
                tab[1][0] = extendedP[i][eP.GK];
                tab[1][1] = room.getPlayer(extendedP[i][eP.ID]);
            }
        }
    }
    GKList = [tab[0][1], tab[1][1]];
}

setInterval(() => {
    var tableau = [];
    if (statNumber % 5 == 0) {
        Object.keys(localStorage).forEach(function(key) {
            if (!["player_name", "view_mode", "geo", "avatar", "player_auth_key"].includes(key)) {
                tableau.push([(JSON.parse(localStorage.getItem(key))[Ss.NK]), (JSON.parse(localStorage.getItem(key))[Ss.GA])]);
            }
        });
        if (tableau.length < 5) {
            return false;
        }
        tableau.sort(function(a, b) {
            return b[1] - a[1];
        });
        room.sendChat("Partidas Jugadas> #1 " + tableau[0][0] + ": " + tableau[0][1] + " #2 " + tableau[1][0] + ": " + tableau[1][1] + " #3 " + tableau[2][0] + ": " + tableau[2][1] + " #4 " + tableau[3][0] + ": " + tableau[3][1] + " #5 " + tableau[4][0] + ": " + tableau[4][1]);
    }
    if (statNumber % 5 == 1) {
        Object.keys(localStorage).forEach(function(key) {
            if (!["player_name", "view_mode", "geo", "avatar", "player_auth_key"].includes(key)) {
                tableau.push([(JSON.parse(localStorage.getItem(key))[Ss.NK]), (JSON.parse(localStorage.getItem(key))[Ss.WI])]);
            }
        });
        if (tableau.length < 5) {
            return false;
        }
        tableau.sort(function(a, b) {
            return b[1] - a[1];
        });
        room.sendChat("Victorias> #1 " + tableau[0][0] + ": " + tableau[0][1] + " #2 " + tableau[1][0] + ": " + tableau[1][1] + " #3 " + tableau[2][0] + ": " + tableau[2][1] + " #4 " + tableau[3][0] + ": " + tableau[3][1] + " #5 " + tableau[4][0] + ": " + tableau[4][1]);
    }
    if (statNumber % 5 == 2) {
        Object.keys(localStorage).forEach(function(key) {
            if (!["player_name", "view_mode", "geo", "avatar", "player_auth_key"].includes(key)) {
                tableau.push([(JSON.parse(localStorage.getItem(key))[Ss.NK]), (JSON.parse(localStorage.getItem(key))[Ss.GL])]);
            }
        });
        if (tableau.length < 5) {
            return false;
        }
        tableau.sort(function(a, b) {
            return b[1] - a[1];
        });
        room.sendChat("Goles> #1 " + tableau[0][0] + ": " + tableau[0][1] + " #2 " + tableau[1][0] + ": " + tableau[1][1] + " #3 " + tableau[2][0] + ": " + tableau[2][1] + " #4 " + tableau[3][0] + ": " + tableau[3][1] + " #5 " + tableau[4][0] + ": " + tableau[4][1]);
    }
    if (statNumber % 5 == 3) {
        Object.keys(localStorage).forEach(function(key) {
            if (!["player_name", "view_mode", "geo", "avatar", "player_auth_key"].includes(key)) {
                tableau.push([(JSON.parse(localStorage.getItem(key))[Ss.NK]), (JSON.parse(localStorage.getItem(key))[Ss.AS])]);
            }
        });
        if (tableau.length < 5) {
            return false;
        }
        tableau.sort(function(a, b) {
            return b[1] - a[1];
        });
        room.sendChat("Asistencias> #1 " + tableau[0][0] + ": " + tableau[0][1] + " #2 " + tableau[1][0] + ": " + tableau[1][1] + " #3 " + tableau[2][0] + ": " + tableau[2][1] + " #4 " + tableau[3][0] + ": " + tableau[3][1] + " #5 " + tableau[4][0] + ": " + tableau[4][1]);
    }
    if (statNumber % 5 == 4) {
        Object.keys(localStorage).forEach(function(key) {
            if (!["player_name", "view_mode", "geo", "avatar", "player_auth_key"].includes(key)) {
                tableau.push([(JSON.parse(localStorage.getItem(key))[Ss.NK]), (JSON.parse(localStorage.getItem(key))[Ss.CS])]);
            }
        });
        if (tableau.length < 5) {
            return false;
        }
        tableau.sort(function(a, b) {
            return b[1] - a[1];
        });
        room.sendChat("CS> #1 " + tableau[0][0] + ": " + tableau[0][1] + " #2 " + tableau[1][0] + ": " + tableau[1][1] + " #3 " + tableau[2][0] + ": " + tableau[2][1] + " #4 " + tableau[3][0] + ": " + tableau[3][1] + " #5 " + tableau[4][0] + ": " + tableau[4][1]);
    }
    statNumber++;
}, statInterval * 60 * 1000);

/* EVENTOS */

/* MOVIMENTO DE JUGADOR */

room.onPlayerJoin = function(player) {
    console.log("---------------------------------------------------");
    console.log("[📢] Nick: " + player.name);
    console.log("[📢] Conn: " + player.conn);
    console.log("[📢] Auth: " + player.auth);
    extendedP.push([player.id, player.auth, player.conn, false, 0, 0, false]);
    updateRoleOnPlayerIn();
    room.sendAnnouncement("👋🏼 Hola, " + player.name + "!", null, 0x5EE7FF, "bold");
    if (room.getPlayerList().length > 1 && room.getPlayerList().length < 5) {
        room.sendAnnouncement("Cargando el estadio...", player.id, 0xEDC021, "bold");
        setTimeout(() => {
            room.sendAnnouncement(" ---------------------------------------------------", player.id, 0xEDC021, "bold");
            room.sendAnnouncement("Bienvenido a la sala del gordo Nachoide! Estaremos atentos para asegurarnos de que no padezcas KUKA-12", player.id, 0xEDC021, "bold");
            room.sendAnnouncement(" ---------------------------------------------------", player.id, 0xEDC021, "bold");
        }, 2_000);
    }
    if (localStorage.getItem(player.auth) != null) {
        var playerRole = JSON.parse(localStorage.getItem(player.auth))[Ss.RL];
        if (playerRole == "admin" || playerRole == "master") {
            room.setPlayerAdmin(player.id, true);
            room.sendAnnouncement("「Admin」" + player.name + " Entró a la sala!", null, 0xFF7900, "bold");
        }
    }
    if (localStorage.getItem(getAuth(player)) == null) {
        stats = [0, 0, 0, 0, "0.00", 0, 0, 0, 0, "0.00", "player", player.name]
        localStorage.setItem(getAuth(player), JSON.stringify(stats));
    }
//    setTimeout(() => {
//        if (registro.get(player.name)) room.sendAnnouncement('Login: !login contraseña', player.id, 0x1B9124, "bold");
//       else room.sendAnnouncement('Registrar: !register contraseña', player.id, 0x1B9124, "bold");
//        room.sendAnnouncement('Login: !login contraseña', player.id, 0x1B9124, "bold");
//    }, 2_000);
}

room.onPlayerTeamChange = function(changedPlayer, byPlayer) {
    if (changedPlayer.id == 0) {
        room.setPlayerTeam(0, Team.SPECTATORS);
        return;
    }
    if (getAFK(changedPlayer) && changedPlayer.team != Team.SPECTATORS) {
        room.setPlayerTeam(changedPlayer.id, Team.SPECTATORS);
        room.sendChat(changedPlayer.name + " está AFK!");
        return;
    }
    updateTeams();
    if (room.getScores() != null) {
        var scores = room.getScores();
        if (changedPlayer.team != Team.SPECTATORS && scores.time <= (3 / 4) * scores.timeLimit && Math.abs(scores.blue - scores.red) < 2) {
            (changedPlayer.team == Team.RED) ? allReds.push(changedPlayer): allBlues.push(changedPlayer);
        }
    }
    if (changedPlayer.team == Team.SPECTATORS) {
        setActivity(changedPlayer, 0);
    }
    if (inChooseMode && resettingTeams == false && byPlayer.id == 0) {
        if (Math.abs(TeamR.length - TeamB.length) == teamS.length) {
            deactivateChooseMode();
            resumeGame();
            var b = teamS.length;
            if (TeamR.length > TeamB.length) {
                for (var i = 0; i < b; i++) {
                    setTimeout(() => {
                        room.setPlayerTeam(teamS[0].id, Team.BLUE);
                    }, 200 * i);
                }
            } else {
                for (var i = 0; i < b; i++) {
                    setTimeout(() => {
                        room.setPlayerTeam(teamS[0].id, Team.RED);
                    }, 200 * i);
                }
            }
            return;
        } else if ((TeamR.length == maxTeamSize && TeamB.length == maxTeamSize) || (TeamR.length == TeamB.length && teamS.length < 2)) {
            deactivateChooseMode();
            resumeGame();
        } else if (TeamR.length <= TeamB.length && redCaptainChoice != "") { // elección recordada
            redCaptainChoice == "top" ? room.setPlayerTeam(teamS[0].id, Team.RED) : redCaptainChoice == "random" ? room.setPlayerTeam(teamS[getRandomInt(teamS.length)].id, Team.RED) : room.setPlayerTeam(teamS[teamS.length - 1].id, Team.RED);
            return;
        } else if (TeamB.length < TeamR.length && blueCaptainChoice != "") {
            blueCaptainChoice == "top" ? room.setPlayerTeam(teamS[0].id, Team.BLUE) : blueCaptainChoice == "random" ? room.setPlayerTeam(teamS[getRandomInt(teamS.length)].id, Team.BLUE) : room.setPlayerTeam(teamS[teamS.length - 1].id, Team.BLUE);
            return;
        } else {
            choosePlayer();
        }
    }
}

room.onPlayerLeave = function(player) {
    if (TeamR.findIndex((red) => red.id == player.id) == 0 && inChooseMode && TeamR.length <= TeamB.length) {
        choosePlayer();
        capLeft = true;
        setTimeout(() => {
            capLeft = false;
        }, 10);
    }
    if (TeamB.findIndex((blue) => blue.id == player.id) == 0 && inChooseMode && TeamB.length < TeamR.length) {
        choosePlayer();
        capLeft = true;
        setTimeout(() => {
            capLeft = false;
        }, 10);
    }
    setActivity(player, 0);
    updateRoleOnPlayerOut();
}

room.onPlayerKicked = function(kickedPlayer, reason, ban, byPlayer) {
    ban == true ? banList.push([kickedPlayer.name, kickedPlayer.id]) : null;
}

/* ACTIVIDAD DE JUGADOR */

room.onPlayerChat = function(player, message) {
    if (message.length > 1 && message[0].toLowerCase() == 't' && message[1] == ' ') {
        if (player.team != 0) {
        room.getPlayerList().forEach((element) => {if (element.team == player.team) room.sendAnnouncement("[TEAM CHAT] " + player.name + ": " + message.substr(2), element.id, (player.team == 1 ? 16725591 : 3261685), "bold", 0)} )
        return false
        }
        else {
        room.sendAnnouncement("Que haces fracasado? No estas en un equipo, con quien queres hablar?", player.id)
        }}

    // SELECCIONES //

    if (message == "!bra") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!bra";
                room.setTeamColors(Team.RED, 0, 0x3347B3, [0x018434, 0xf8de2e, 0xf8de2e]);
                room.sendAnnouncement("El capitán del equipo rojo, "+ player.name + ", eligió el uniforme de Brasil!", null, 0x30F55F, "bold");
            }
        }
    }
    if (message == "!bra") {
        if (player.team == 2) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!bra";
                room.setTeamColors(Team.BLUE, 0, 0x3347B3, [0x018434, 0xF8DE2E, 0xF8DE2E]);
                room.sendAnnouncement("El capitán del equipo azul, "+ player.name + ", eligió el uniforme de Brasil! ", null, 0x30F55F, "bold");
            }
        }
    }
    if (message == "!ale") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!ale";
                room.setTeamColors(Team.RED, 90, 0xFFFFFF, [0x121003, 0xC70000, 0xF5C600]);
                room.sendAnnouncement("El capitán del equipo rojo, "+ player.name + ", eligió el uniforme de Alemania!", null, 0x30F55F, "bold");
            }
        }
    }
    if (message == "!ale") {
        if (player.team == 2) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!ale";
                room.setTeamColors(Team.BLUE, 90, 0xFFFFFF, [0x121003, 0xC70000, 0xF5C600]);
                room.sendAnnouncement("El capitán del equipo azul, "+ player.name + ", eligió el uniforme de Alemania!", null, 0x30F55F, "bold");
            }
        }
    }
    if (message == "!arg") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!arg";
                room.setTeamColors(Team.RED, 90, 0xE3AC42, [0x74ACDF, 0xFFFFFF, 0x74ACDF]);
                room.sendAnnouncement("El capitán del equipo rojo, "+ player.name + ", eligió el uniforme de Argentina!", null, 0x30F55F, "bold");
            }
        }
    }
    if (message == "!arg") {
        if (player.team == 2) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!arg";
                room.setTeamColors(Team.BLUE, 90, 0xE3AC42, [0x74ACDF, 0xFFFFFF, 0x74ACDF]);
                room.sendAnnouncement("El capitán del equipo azul, "+ player.name + ", eligió el uniforme de Argentina!", null, 0x30F55F, "bold");
            }
        }
    }
    if (message == "!esp") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!esp";
                room.setTeamColors(Team.RED, 0, 0xDBA640, [0x7B111A, 0x7B111A, 0x7B111A]);
                room.sendAnnouncement("El capitán del equipo rojo, "+ player.name + ", eligió el uniforme de España!", null, 0x30F55F, "bold");
            }
        }
    }
    if (message == "!esp") {
        if (player.team == 2) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!esp";
                room.setTeamColors(Team.BLUE, 0, 0xDBA640, [0x7B111A, 0x7B111A, 0x7B111A]);
                room.sendAnnouncement("El capitán del equipo azul, "+ player.name + ", eligió el uniforme de España!", null, 0x30F55F, "bold");
            }
        }
    }
    if (message == "!por") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!por";
                room.setTeamColors(Team.RED, 120, 0xDBA640, [0x7B111A, 0x7B111A, 0x384F43]);
                room.sendAnnouncement("El capitán del equipo rojo, "+ player.name + ", eligió el uniforme de Portugal!", null, 0x30F55F, "bold");
            }
        }
    }
    if (message == "!por") {
        if (player.team == 2) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!por";
                room.setTeamColors(Team.BLUE, 120, 0xDBA640, [0x7B111A, 0x7B111A, 0x384F43]);
                room.sendAnnouncement("El capitán del equipo azul, "+ player.name + ", eligió el uniforme de Portugal!", null, 0x30F55F, "bold");
            }
        }
    }
    if (message == "!ita") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!ita";
                room.setTeamColors(Team.RED, 60, 0xFFFFFF, [0x0249a8, 0x0366EB, 0x0082d3]);
                room.sendAnnouncement("El capitán del equipo rojo, "+ player.name + ", eligió el uniforme de Italia!", null, 0x30F55F, "bold");
            }
        }
    }
    if (message == "!ita") {
        if (player.team == 2) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!ita";
                room.setTeamColors(Team.BLUE, 60, 0xFFFFFF, [0x0249a8, 0x0366EB, 0x0082d3]);
                room.sendAnnouncement("El capitán del equipo azul, "+ player.name + ", eligió el uniforme de Italia!", null, 0x30F55F, "bold");
            }
        }
    }
    if (message == "!uru") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!uru";
                room.setTeamColors(Team.RED, 0, 0xFFFFFF, [0x0082d3, 0x0082d3, 0x0082d3]);
                room.sendAnnouncement("El capitán del equipo rojo, "+ player.name + ", eligió el uniforme de Uruguay!", null, 0x30F55F, "bold");
            }
        }
    }
    if (message == "!uru") {
        if (player.team == 2) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!uru";
                room.setTeamColors(Team.BLUE, 0, 0xFFFFFF, [0x0082d3, 0x0082d3, 0x0082d3]);
                room.sendAnnouncement("El capitán del equipo azul, "+ player.name + ", eligió el uniforme de Uruguay!", null, 0x30F55F, "bold");
            }
        }
    }

    
    if (message == "!fra") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!fra";
                room.setTeamColors(Team.RED, 0, 0xD19E1F, [0x202c46, 0x202c46, 0x202c46]);
                room.sendAnnouncement("El capitán del equipo rojo, "+ player.name + ", eligió el uniforme de Francia!", null, 0x30F55F, "bold");
            }
        }
    }
    if (message == "!fra") {
        if (player.team == 2) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!fra";
                room.setTeamColors(Team.BLUE, 0, 0xD19E1F, [0x202c46, 0x202c46, 0x202c46]);
                room.sendAnnouncement("El capitán del equipo azul, "+ player.name + ", eligió el uniforme de Francia!", null, 0x30F55F, "bold");
            }
        }
    }
    if (message == "!ing") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!ing";
                room.setTeamColors(Team.RED, 90, 0x0f2544, [0x408CFF, 0xA1C6FF, 0xe0e4e9]);
                room.sendAnnouncement("El capitán del equipo rojo, "+ player.name + ", eligió el uniforme de Inglaterra!", null, 0x30F55F, "bold");
            }
        }
    }
    if (message == "!ing") {
        if (player.team == 2) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!ing";
                room.setTeamColors(Team.BLUE, 90, 0x0f2544, [0x408CFF, 0xA1C6FF, 0xe0e4e9]);
                room.sendAnnouncement("El capitán del equipo azul, "+ player.name + ", eligió el uniforme de Inglaterra!", null, 0x30F55F, "bold");
            }
        }
    }
    if (message == "!bel") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!bel";
                room.setTeamColors(Team.RED, 90, 0xD19E1F, [0x151619, 0x990011, 0x990011]);
                room.sendAnnouncement("El capitán del equipo rojo, "+ player.name + ", eligió el uniforme de Bélgica!", null, 0x30F55F, "bold");
            }
        }
    }
    if (message == "!bel") {
        if (player.team == 2) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!bel";
                room.setTeamColors(Team.BLUE, 90, 0xD19E1F, [0x151619, 0x990011, 0x990011]);
                room.sendAnnouncement("El capitán del equipo azul, "+ player.name + ", eligió el uniforme de Bélgica!", null, 0x30F55F, "bold");
            }
        }
    }
    if (message == "!hol") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!hol";
                room.setTeamColors(Team.RED, 90, 0x2B0E09, [0xdc6024, 0xdc6024, 0xdc6024]);
                room.sendAnnouncement("El capitán del equipo rojo, "+ player.name + ", eligió el uniforme de Holanda!", null, 0x30F55F, "bold");
            }
        }
    }
    if (message == "!hol") {
        if (player.team == 2) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!hol";
                room.setTeamColors(Team.RED, 90, 0x2B0E09, [0xdc6024, 0xdc6024, 0xdc6024]);
                room.sendAnnouncement("El capitán del equipo azul, "+ player.name + ", eligió el uniforme de Holanda!", null, 0x30F55F, "bold");
            }
        }
    }

    if (message == "!chi") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!chi";
                room.setTeamColors(Team.RED, 60, 0xFFFFFF, [0xed3422]);
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Chile!", null, 0xFFFFFF, "bold");
            }
        }
    }

    if (message == "!chi") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!chi";
                room.setTeamColors(Team.BLUE, 60, 0xFFFFFF, [0xed3422]);
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Chile!", null, 0xFFFFFF, "bold");
            }
        }
    }

    if (message == "!cro") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!cro";
                room.setTeamColors(Team.RED, 90, 0x0065c9, [0xD6001E, 0xF2F0F3, 0xF2F0F3]);
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Croacia!", null, 0x0065c9, "bold");
            }
        }
    }

    if (message == "!cro") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!cro";
                room.setTeamColors(Team.BLUE, 90, 0x0065c9, [0xD6001E, 0xF2F0F3, 0xF2F0F3]);
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Croacia!", null, 0x0065c9, "bold");
            }
        }
    }

    if (message == "!col") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!col";
                room.setTeamColors(Team.RED, 240, 0x3c4462, [0xfdfd02]); // Colores de Colombia
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Colombia!", null, 0xfdfd02, "bold");
            }
        }
    }

    if (message == "!col") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!col";
                room.setTeamColors(Team.BLUE, 240, 0x3c4462, [0xfdfd02]); // Colores de Colombia
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Colombia!", null, 0xfdfd02, "bold");
            }
        }
    }

    if (message == "!per") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!per";
                room.setTeamColors(Team.RED, 52, 0x000000, [0xFFFFFF, 0xdf1117, 0xFFFFFF]); // Colores de Perú
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Perú!", null, 0xdf1117, "bold");
            }
        }
    }

    if (message == "!per") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!per";
                room.setTeamColors(Team.BLUE, 52, 0x000000, [0xFFFFFF, 0xdf1117, 0xFFFFFF]); // Colores de Perú
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Perú!", null, 0xdf1117, "bold");
            }
        }
    }

    if (message == "!bol") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!bol";
                room.setTeamColors(Team.RED, 180, 0xFFFFFF, [0x26A057]); // Colores de Bolivia
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Bolivia!", null, 0x26A057, "bold");
            }
        }
    }

    if (message == "!bol") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!bol";
                room.setTeamColors(Team.BLUE, 180, 0xFFFFFF, [0x26A057]); // Colores de Bolivia
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Bolivia!", null, 0x26A057, "bold");
            }
        }
    }

    if (message == "!par") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!par";
                room.setTeamColors(Team.RED, 180, 0x0380dc, [0xf61527, 0xffffff, 0xf61527]); // Colores de Paraguay
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Paraguay!", null, 0xf61527, "bold");
            }
        }
    }

    if (message == "!par") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!par";
                room.setTeamColors(Team.BLUE, 180, 0x0380dc, [0xf61527, 0xffffff, 0xf61527]); // Colores de Paraguay
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Paraguay!", null, 0xf61527, "bold");
            }
        }
    }

    if (message == "!ven") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!ven";
                room.setTeamColors(Team.RED, 180, 0xFFFFFF, [0x8f021d]); // Colores de Venezuela
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Venezuela!", null, 0x8f021d, "bold");
            }
        }
    }

    if (message == "!ven") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!ven";
                room.setTeamColors(Team.BLUE, 180, 0xFFFFFF, [0x8f021d]); // Colores de Venezuela
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Venezuela!", null, 0x8f021d, "bold");
            }
        }
    }

    if (message == "!qat") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!qat";
                room.setTeamColors(Team.RED, 90, 0xf1eff4, [0x9b003c, 0x940139, 0x940139]); // Colores de Qatar
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Qatar!", null, 0x940139, "bold");
            }
        }
    }

    if (message == "!qat") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!qat";
                room.setTeamColors(Team.BLUE, 90, 0xf1eff4, [0x9b003c, 0x940139, 0x940139]); // Colores de Qatar
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Qatar!", null, 0x940139, "bold");
            }
        }
    }



    // EQUIPOS EUROPEOS

    if (message == "!sev") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!sev";
                room.setTeamColors(Team.RED, 90, 0xfe0000, [0xD1D1D1, 0xFFFFFF, 0xFFFFFF]);
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Sevilla!", null, 0xfe0000, "bold");
            }
        }
    }

    if (message == "!sev") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!sev";
                room.setTeamColors(Team.BLUE, 90, 0xfe0000, [0xD1D1D1, 0xFFFFFF, 0xFFFFFF]);
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Sevilla!", null, 0xfe0000, "bold");
            }
        }
    }

    if (message == "!fcb") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!fcb";
                room.setTeamColors(Team.RED, 0, 0xe89e00, [0x013378, 0x841138, 0x013378]);
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Barcelona!", null, 0xe89e00, "bold");
            }
        }
    }

    if (message == "!fcb") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!fcb";
                room.setTeamColors(Team.BLUE, 0, 0xe89e00, [0x013378, 0x841138, 0x013378]);
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Barcelona!", null, 0xe89e00, "bold");
            }
        }
    }

    if (message == "!rma") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!rma";
                room.setTeamColors(Team.RED, 65, 0x2b2e41, [0xFFB333, 0xffffff, 0xffffff]);
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Real Madrid!", null, 0x2b2e41, "bold");
            }
        }
    }

    if (message == "!rma") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!rma";
                room.setTeamColors(Team.BLUE, 65, 0x2b2e41, [0xFFB333, 0xffffff, 0xffffff]);
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Real Madrid!", null, 0x2b2e41, "bold");
            }
        }
    }

    if (message == "!int") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!int";
                room.setTeamColors(Team.RED, 180, 0xFFFFFF, [0x00239c, 0x000000, 0x00239c]);
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Inter Milan!", null, 0xFFFFFF, "bold");
            }
        }
    }

    if (message == "!int") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!int";
                room.setTeamColors(Team.BLUE, 180, 0xFFFFFF, [0x00239c, 0x000000, 0x00239c]);
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Inter Milan!", null, 0xFFFFFF, "bold");
            }
        }
    }

    if (message == "!mil") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!mil";
                room.setTeamColors(Team.RED, 180, 0xffffff, [0xdf061b, 0x000000, 0xdf061b]);
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de AC Milan!", null, 0xffffff, "bold");
            }
        }
    }

    if (message == "!mil") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!mil";
                room.setTeamColors(Team.BLUE, 180, 0xffffff, [0xdf061b, 0x000000, 0xdf061b]);
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de AC Milan!", null, 0xffffff, "bold");
            }
        }
    }

    if (message == "!tot") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!tot";
                room.setTeamColors(Team.RED, 90, 0x1f2652, [0xffffff]);
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Tottenham!", null, 0x1f2652, "bold");
            }
        }
    }

    if (message == "!tot") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!tot";
                room.setTeamColors(Team.BLUE, 90, 0x1f2652, [0xffffff]);
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Tottenham!", null, 0x1f2652, "bold");
            }
        }
    }

    if (message == "!liv") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!liv";
                room.setTeamColors(Team.RED, 180, 0xf0f0f2, [0xc4021d]);
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Liverpool!", null, 0xf0f0f2, "bold");
            }
        }
    }

    if (message == "!liv") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!liv";
                room.setTeamColors(Team.BLUE, 180, 0xf0f0f2, [0xc4021d]);
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Liverpool!", null, 0xf0f0f2, "bold");
            }
        }
    }

    if (message == "!nap") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!nap";
                room.setTeamColors(Team.RED, 180, 0xffffff, [0x01b9eb]);
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Napoli!", null, 0xffffff, "bold");
            }
        }
    }
    
    if (message == "!nap") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!nap";
                room.setTeamColors(Team.BLUE, 180, 0xffffff, [0x01b9eb]);
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Napoli!", null, 0xffffff, "bold");
            }
        }
    }

    if (message == "!bay") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!bay";
                room.setTeamColors(Team.RED, 90, 0xFFFFFF, [0x860010, 0xc7011b, 0xc7011b]);
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Bayern de Múnich!", null, 0xFFFFFF, "bold");
            }
        }
    }

    if (message == "!bay") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!bay";
                room.setTeamColors(Team.BLUE, 90, 0xFFFFFF, [0x860010, 0xc7011b, 0xc7011b]);
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Bayern de Múnich!", null, 0xFFFFFF, "bold");
            }
        }
    }

    if (message == "!dor") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!dor";
                room.setTeamColors(Team.RED, 90, 0x2d2317, [0x2c1d05, 0xf5e200, 0xf5e200]);
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Borussia Dortmund!", null, 0x2d2317, "bold");
            }
        }
    }

    if (message == "!dor") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!dor";
                room.setTeamColors(Team.BLUE, 90, 0x2d2317, [0x2c1d05, 0xf5e200, 0xf5e200]);
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Borussia Dortmund!", null, 0x2d2317, "bold");
            }
        }
    }

    if (message == "!juv") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!juv";
                room.setTeamColors(Team.RED, 180, 0xf7c902, [0x1f1a20, 0xffffff, 0x1f1a20]);
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Juventus!", null, 0xf7c902, "bold");
            }
        }
    }

    if (message == "!juv") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!juv";
                room.setTeamColors(Team.BLUE, 180, 0xf7c902, [0x1f1a20, 0xffffff, 0x1f1a20]);
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Juventus!", null, 0xf7c902, "bold");
            }
        }
    }

    if (message == "!mnu") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!mnu";
                room.setTeamColors(Team.RED, 180, 0xffffff, [0xc4040f]);
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Manchester United!", null, 0xffffff, "bold");
            }
        }
    }

    if (message == "!mnu") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!mnu";
                room.setTeamColors(Team.BLUE, 180, 0xffffff, [0xc4040f]);
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Manchester United!", null, 0xffffff, "bold");
            }
        }
    }

    if (message == "!mci") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!mci";
                room.setTeamColors(Team.RED, 90, 0x006eae, [0xa3d4f2]);
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Manchester City!", null, 0x006eae, "bold");
            }
        }
    }

    if (message == "!mci") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!mci";
                room.setTeamColors(Team.BLUE, 90, 0x006eae, [0xa3d4f2]);
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Manchester City!", null, 0x006eae, "bold");
            }
        }
    }

    if (message == "!afc") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!afc";
                room.setTeamColors(Team.RED, 69, 0xd3a255, [0xffffff, 0xd10413, 0xd10413]);
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Arsenal FC!", null, 0xd3a255, "bold");
            }
        }
    }

    if (message == "!afc") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!afc";
                room.setTeamColors(Team.BLUE, 69, 0xd3a255, [0xffffff, 0xd10413, 0xd10413]);
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Arsenal FC!", null, 0xd3a255, "bold");
            }
        }
    }

    if (message == "!che") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!che";
                room.setTeamColors(Team.RED, 66, 0xe8d821, [0x035fc2, 0x043077, 0x043077]);
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Chelsea!", null, 0xe8d821, "bold");
            }
        }
    }

    if (message == "!che") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!che";
                room.setTeamColors(Team.BLUE, 66, 0xe8d821, [0x035fc2, 0x043077, 0x043077]);
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Chelsea!", null, 0xe8d821, "bold");
            }
        }
    }

    if (message == "!ast") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!ast";
                room.setTeamColors(Team.RED, 130, 0xFFFFFF, [0xC5DBF3, 0x97012F, 0x6A0D2A]); // Colores de Aston Villa
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Aston Villa!", null, 0x97012F, "bold");
            }
        }
    }

    if (message == "!ast") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!ast";
                room.setTeamColors(Team.BLUE, 130, 0xFFFFFF, [0xC5DBF3, 0x97012F, 0x6A0D2A]); // Colores de Aston Villa
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Aston Villa!", null, 0x97012F, "bold");
            }
        }
    }

    if (message == "!ful") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!ful";
                room.setTeamColors(Team.RED, 90, 0x1e202c, [0xF0EFF5]); // Colores de Fulham FC
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Fulham FC!", null, 0x1e202c, "bold");
            }
        }
    }
    
    if (message == "!ful") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!ful";
                room.setTeamColors(Team.BLUE, 90, 0x1e202c, [0xF0EFF5]); // Colores de Fulham FC
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Fulham FC!", null, 0x1e202c, "bold");
            }
        }
    }

    if (message == "!lei") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!lei";
                room.setTeamColors(Team.RED, 270, 0xFFFFFF, [0x364CFA, 0x3035FF]); // Colores de Leicester
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Leicester!", null, 0x3035FF, "bold");
            }
        }
    }

    if (message == "!lei") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!lei";
                room.setTeamColors(Team.BLUE, 270, 0xFFFFFF, [0x364CFA, 0x3035FF]); // Colores de Leicester
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Leicester!", null, 0x3035FF, "bold");
            }
        }
    }

    if (message == "!aja") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!aja";
                room.setTeamColors(Team.RED, 180, 0xB8BCC2, [0xFCFAFC, 0xE11025, 0xFCFAFC]); // Colores de Ajax
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Ajax!", null, 0xE11025, "bold");
            }
        }
    }

    if (message == "!aja") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!aja";
                room.setTeamColors(Team.BLUE, 180, 0xB8BCC2, [0xFCFAFC, 0xE11025, 0xFCFAFC]); // Colores de Ajax
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Ajax!", null, 0xE11025, "bold");
            }
        }
    }

    if (message == "!psv") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!psv";
                room.setTeamColors(Team.RED, 180, 0x030303, [0xFFFFFF, 0xFA2747, 0xFFFFFF]); // Colores de PSV
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de PSV!", null, 0xFA2747, "bold");
            }
        }
    }

    if (message == "!psv") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!psv";
                room.setTeamColors(Team.BLUE, 180, 0x030303, [0xFFFFFF, 0xFA2747, 0xFFFFFF]); // Colores de PSV
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de PSV!", null, 0xFA2747, "bold");
            }
        }
    }

    if (message == "!fey") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!fey";
                room.setTeamColors(Team.RED, 180, 0x000000, [0xFFFFFF, 0xFA203B]); // Colores de FEYENOORD
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Feyenoord!", null, 0xFA203B, "bold");
            }
        }
    }

    if (message == "!fey") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!fey";
                room.setTeamColors(Team.BLUE, 180, 0x000000, [0xFFFFFF, 0xFA203B]); // Colores de FEYENOORD
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Feyenoord!", null, 0xFA203B, "bold");
            }
        }
    }

    if (message == "!psg") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!psg";
                room.setTeamColors(Team.RED, 180, 0xf4f5f7, [0x25406c, 0x203c65, 0x25406c]); // Colores del PSG
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme del PSG!", null, 0x203c65, "bold");
            }
        }
    }

    if (message == "!psg") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!psg";
                room.setTeamColors(Team.BLUE, 180, 0xf4f5f7, [0x25406c, 0x203c65, 0x25406c]); // Colores del PSG
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme del PSG!", null, 0x203c65, "bold");
            }
        }
    }

    if (message == "!mar") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!mar";
                room.setTeamColors(Team.RED, 72, 0x43ceec, [0x29ccf1, 0xf6f4fc, 0xf6f4fc]); // Colores de Olympique Marsella
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme del Olympique Marsella!", null, 0x29ccf1, "bold");
            }
        }
    }

    if (message == "!mar") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!mar";
                room.setTeamColors(Team.BLUE, 72, 0x43ceec, [0x29ccf1, 0xf6f4fc, 0xf6f4fc]); // Colores de Olympique Marsella
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme del Olympique Marsella!", null, 0x29ccf1, "bold");
            }
        }
    }

    if (message == "!rom") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!rom";
                room.setTeamColors(Team.RED, 0, 0xffb200, [0x8f001c]); // Colores de AS ROMA
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de AS Roma!", null, 0xffb200, "bold");
            }
        }
    }

    if (message == "!rom") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!rom";
                room.setTeamColors(Team.BLUE, 0, 0xffb200, [0x8f001c]); // Colores de AS ROMA
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de AS Roma!", null, 0xffb200, "bold");
            }
        }
    }

    if (message == "!atm") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!atm";
                room.setTeamColors(Team.RED, 180, 0x334c8c, [0xdc092a, 0xffffff, 0xdc092a]);
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Atlético Madrid!", null, 0x334c8c, "bold");
            }
        }
    }

    if (message == "!atm") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!atm";
                room.setTeamColors(Team.BLUE, 180, 0x334c8c, [0xdc092a, 0xffffff, 0xdc092a]);
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Atlético Madrid!", null, 0x334c8c, "bold");
            }
        }
    }
    //EQUIPOS SUDAMERICANOS
    {

    if (message == "!riv") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!riv";
                room.setTeamColors(Team.RED, 30, 0x231f20, [0xffffff, 0xee1b2c, 0xffffff]);
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de River Plate!", null, 0x231f20, "bold");
            }
        }
    }

    if (message == "!riv") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!riv";
                room.setTeamColors(Team.BLUE, 30, 0x231f20, [0xffffff, 0xee1b2c, 0xffffff]);
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de River Plate!", null, 0x231f20, "bold");
            }
        }
    }

    if (message == "!boc") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!boc";
                room.setTeamColors(Team.RED, 90, 0xFFFFFF, [0x033f86, 0xfab900, 0x033f86]);
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Boca Juniors!", null, 0x30F55F, "bold");
            }
        }
    }

    if (message == "!boc") {
        if (player.team == 2) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!boc";
                room.setTeamColors(Team.BLUE, 90, 0xFFFFFF, [0x033f86, 0xfab900, 0x033f86]);
                room.sendAnnouncement("El capitan del equipo azul, "+ player.name + ", eligió el uniforme de Boca Juniors!", null, 0x30F55F, "bold");
            }
        }
    }

    if (message == "!rac") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!rac";
                room.setTeamColors(Team.RED, 180, 0x002942, [0x00a5e3, 0xFFFFFF, 0x00a5e3]);
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Racing!", null, 0x002942, "bold");
            }
        }
    }

    if (message == "!rac") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!rac";
                room.setTeamColors(Team.BLUE, 180, 0x002942, [0x00a5e3, 0xFFFFFF, 0x00a5e3]);
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Racing!", null, 0x002942, "bold");
            }
        }
    }

    if (message == "!cai") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!cai";
                room.setTeamColors(Team.RED, 60, 0xffffff, [0xec1c24]);
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Independiente!", null, 0xffffff, "bold");
            }
        }
    }

    if (message == "!cai") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!cai";
                room.setTeamColors(Team.BLUE, 60, 0xffffff, [0xec1c24]);
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Independiente!", null, 0xffffff, "bold");
            }
        }
    }

    if (message == "!nob") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!nob";
                room.setTeamColors(Team.RED, 0, 0xffffff, [0xee1d23, 0x000000]);
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Newell's!", null, 0xffffff, "bold");
            }
        }
    }

    if (message == "!nob") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!nob";
                room.setTeamColors(Team.BLUE, 0, 0xffffff, [0xee1d23, 0x000000]);
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Newell's!", null, 0xffffff, "bold");
            }
        }
    }

    if (message == "!ros") {
        if (player.team == 2) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!ros";
                room.setTeamColors(Team.RED, 180, 0xFFFFFF, [0xfcd828, 0x144178, 0xfcd828]);
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Rosario Central!", null, 0xFFFFFF, "bold");
            }
        }
    }

    if (message == "!ros") {
        if (player.team == 2) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!ros";
                room.setTeamColors(Team.BLUE, 180, 0xFFFFFF, [0xfcd828, 0x144178, 0xfcd828]);
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Rosario Central!", null, 0xFFFFFF, "bold");
            }
        }
    }

    if (message == "!ald") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!ald";
                room.setTeamColors(Team.RED, 180, 0xffffff, [0xf5cf00, 0x3E984C, 0xf5cf00]);
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Aldosivi!", null, 0xffffff, "bold");
            }
        }
    }

    if (message == "!ald") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!ald";
                room.setTeamColors(Team.BLUE, 180, 0xffffff, [0xf5cf00, 0x3E984C, 0xf5cf00]);
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Aldosivi!", null, 0xffffff, "bold");
            }
        }
    }

    if (message == "!gim") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!gim";
                room.setTeamColors(Team.RED, 90, 0x00afef, [0xFFFFFF, 0x12175e, 0xFFFFFF]);
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Gimnasia (LP)!", null, 0x00afef, "bold");
            }
        }
    }

    if (message == "!gim") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!gim";
                room.setTeamColors(Team.BLUE, 90, 0x00afef, [0xFFFFFF, 0x12175e, 0xFFFFFF]);
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Gimnasia (LP)!", null, 0x00afef, "bold");
            }
        }
    }

    if (message == "!dyj") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!dyj";
                room.setTeamColors(Team.RED, 90, 0x019877, [0x019b5f, 0xfde101, 0xfde101]);
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Defensa y Justicia!", null, 0x019877, "bold");
            }
        }
    }

    if (message == "!dyj") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!dyj";
                room.setTeamColors(Team.BLUE, 90, 0x019877, [0x019b5f, 0xfde101, 0xfde101]);
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Defensa y Justicia!", null, 0x019877, "bold");
            }
        }
    }

    if (message == "!cru") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!cru";
                room.setTeamColors(Team.RED, 180, 0xe3e7f0, [0x0146ab, 0x044bb3, 0x0146ab]);
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Cruzeiro!", null, 0xe3e7f0, "bold");
            }
        }
    }

    if (message == "!cru") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!cru";
                room.setTeamColors(Team.BLUE, 180, 0xe3e7f0, [0x0146ab, 0x044bb3, 0x0146ab]);
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Cruzeiro!", null, 0xe3e7f0, "bold");
            }
        }
    }

    if (message == "!pal") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!pal";
                room.setTeamColors(Team.RED, 90, 0xFFFFFF, [0x30888A, 0x135053, 0x135053]);
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Palmeiras!", null, 0xFFFFFF, "bold");
            }
        }
    }

    if (message == "!pal") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!pal";
                room.setTeamColors(Team.BLUE, 90, 0xFFFFFF, [0x30888A, 0x135053, 0x135053]);
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Palmeiras!", null, 0xFFFFFF, "bold");
            }
        }
    }

    if (message == "!gre") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!gre";
                room.setTeamColors(Team.RED, 180, 0xFFFFFF, [0x009ee2, 0x05171d, 0x009ee2]);
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Grêmio!", null, 0xFFFFFF, "bold");
            }
        }
    }

    if (message == "!gre") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!gre";
                room.setTeamColors(Team.BLUE, 180, 0xFFFFFF, [0x009ee2, 0x05171d, 0x009ee2]);
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Grêmio!", null, 0xFFFFFF, "bold");
            }
        }
    }

    if (message == "!est") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!est";
                room.setTeamColors(Team.RED, 180, 0x323232, [0xe41815, 0xFFFFFF, 0xe41815]);
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Estudiantes (LP)!", null, 0x323232, "bold");
            }
        }
    }

    if (message == "!est") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!est";
                room.setTeamColors(Team.BLUE, 180, 0x323232, [0xe41815, 0xFFFFFF, 0xe41815]);
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Estudiantes (LP)!", null, 0x323232, "bold");
            }
        }
    }

    if (message == "!banfield") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!banfield";
                room.setTeamColors(Team.RED, 180, 0xb59859, [0x007836, 0xffffff, 0x007836]);
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Banfield!", null, 0xb59859, "bold");
            }
        }
    }

    if (message == "!banfield") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!banfield";
                room.setTeamColors(Team.BLUE, 180, 0xb59859, [0x007836, 0xffffff, 0x007836]);
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Banfield!", null, 0xb59859, "bold");
            }
        }
    }

    if (message == "!lan") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!lan";
                room.setTeamColors(Team.RED, 90, 0xFFFFFF, [0x6a2331, 0x74192e, 0x74192e]);
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Lanús!", null, 0xFFFFFF, "bold");
            }
        }
    }

    if (message == "!lan") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!lan";
                room.setTeamColors(Team.BLUE, 90, 0xFFFFFF, [0x6a2331, 0x74192e, 0x74192e]);
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Lanús!", null, 0xFFFFFF, "bold");
            }
        }
    }

    if (message == "!par") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!par";
                room.setTeamColors(Team.RED, 48, 0xFFFFFF, [0xC6012C, 0xC6012C, 0x100E0F]);
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Atlético Paranaense!", null, 0xFFFFFF, "bold");
            }
        }
    }

    if (message == "!atp") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!atp";
                room.setTeamColors(Team.BLUE, 48, 0xFFFFFF, [0xC6012C, 0xC6012C, 0x100E0F]);
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Atlético Paranaense!", null, 0xFFFFFF, "bold");
            }
        }
    }

    if (message == "!hur") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!hur";
                room.setTeamColors(Team.RED, 52, 0xff0000, [0xFFFFFF]);
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Huracán!", null, 0xff0000, "bold");
            }
        }
    }

    if (message == "!hur") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!hur";
                room.setTeamColors(Team.BLUE, 52, 0xff0000, [0xFFFFFF]);
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Huracán!", null, 0xff0000, "bold");
            }
        }
    }

    if (message == "!tig") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!tig";
                room.setTeamColors(Team.RED, 90, 0xFFFFFF, [0x304383, 0xcb1b2d, 0x304383]);
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Tigre!", null, 0xFFFFFF, "bold");
            }
        }
    }

    if (message == "!tig") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!tig";
                room.setTeamColors(Team.BLUE, 90, 0xFFFFFF, [0x304383, 0xcb1b2d, 0x304383]);
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Tigre!", null, 0xFFFFFF, "bold");
            }
        }
    }

    if (message == "!aaaj") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!aaaj";
                room.setTeamColors(Team.RED, 123, 0x005da4, [0xeb2a2f, 0xFFFFFF, 0xeb2a2f]);
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Argentinos Juniors!", null, 0x005da4, "bold");
            }
        }
    }

    if (message == "!aaaj") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!aaaj";
                room.setTeamColors(Team.BLUE, 123, 0x005da4, [0xeb2a2f, 0xFFFFFF, 0xeb2a2f]);
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Argentinos Juniors!", null, 0x005da4, "bold");
            }
        }
    }

    if (message == "!alb") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!alb";
                room.setTeamColors(Team.RED, 180, 0x282a27, [0xFFFFFF]);
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de All Boys!", null, 0x282a27, "bold");
            }
        }
    }

    if (message == "!alb") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!alb";
                room.setTeamColors(Team.BLUE, 180, 0x282a27, [0xFFFFFF]);
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de All Boys!", null, 0x282a27, "bold");
            }
        }
    }

    if (message == "!atl") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!atl";
                room.setTeamColors(Team.RED, 180, 0xFFFFFF, [0xedbf00, 0x34458a, 0xedbf00]);
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Atlanta!", null, 0x34458a, "bold");
            }
        }
    }

    if (message == "!atl") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!atl";
                room.setTeamColors(Team.BLUE, 180, 0xFFFFFF, [0xedbf00, 0x34458a, 0xedbf00]);
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Atlanta!", null, 0x34458a, "bold");
            }
        }
    }

    if (message == "!bel") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!bel";
                room.setTeamColors(Team.RED, 0, 0xffffff, [0x1a120c, 0x009cd0, 0x009cd0]); // Colores de Belgrano
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Belgrano!", null, 0xffffff, "bold");
            }
        }
    }

    if (message == "!bel") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!bel";
                room.setTeamColors(Team.BLUE, 0, 0xffffff, [0x1a120c, 0x009cd0, 0x009cd0]); // Colores de Belgrano
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Belgrano!", null, 0xffffff, "bold");
            }
        }
    }

    if (message == "!cha") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!cha";
                room.setTeamColors(Team.RED, 0, 0xffffff, [0x000000, 0xd2191e, 0x000000]); // Colores de Chacarita
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Chacarita Jrs.!", null, 0xffffff, "bold");
            }
        }
    }

    if (message == "!cha") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!cha";
                room.setTeamColors(Team.BLUE, 0, 0xffffff, [0x000000, 0xd2191e, 0x000000]); // Colores de Chacarita
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Chacarita Jrs.!", null, 0xffffff, "bold");
            }
        }
    }

    if (message == "!tal") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!tal";
                room.setTeamColors(Team.RED, 0, 0xa7a9ab, [0x1e315a, 0xffffff, 0x1e315a]); // Colores de Talleres
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Talleres (C)!", null, 0xa7a9ab, "bold");
            }
        }
    }

    if (message == "!tal") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!tal";
                room.setTeamColors(Team.BLUE, 0, 0xa7a9ab, [0x1e315a, 0xffffff, 0x1e315a]); // Colores de Talleres
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Talleres (C)!", null, 0xa7a9ab, "bold");
            }
        }
    }

    if (message == "!pla") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!pla";
                room.setTeamColors(Team.RED, 0, 0xfd6f21, [0xffffff, 0x5a3e22, 0xffffff]); // Colores de Platense
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Platense!", null, 0xfd6f21, "bold");
            }
        }
    }

    if (message == "!pla") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!pla";
                room.setTeamColors(Team.BLUE, 0, 0xfd6f21, [0xffffff, 0x5a3e22, 0xffffff]); // Colores de Platense
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Platense!", null, 0xfd6f21, "bold");
            }
        }
    }

    if (message == "!oli") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!oli";
                room.setTeamColors(Team.RED, 0, 0xffffff, [0x292929, 0xedc63a, 0x292929]); // Colores de Olimpo
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Olimpo!", null, 0xffffff, "bold");
            }
        }
    }

    if (message == "!oli") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!oli";
                room.setTeamColors(Team.BLUE, 0, 0xffffff, [0x292929, 0xedc63a, 0x292929]); // Colores de Olimpo
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Olimpo!", null, 0xffffff, "bold");
            }
        }
    }

    if (message == "!smt") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!smt";
                room.setTeamColors(Team.RED, 0, 0x0f0f0f, [0xe11a25, 0xffffff, 0xe11a25]); // Colores de San Martín (T)
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de San Martín (T)!", null, 0x0f0f0f, "bold");
            }
        }
    }

    if (message == "!smt") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!smt";
                room.setTeamColors(Team.BLUE, 0, 0x0f0f0f, [0xe11a25, 0xffffff, 0xe11a25]); // Colores de San Martín (T)
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de San Martín (T)!", null, 0x0f0f0f, "bold");
            }
        }
    }

    if (message == "!atltucuman") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!atltucuman";
                room.setTeamColors(Team.RED, 180, 0x575a5b, [0x71afdb, 0xFFFFFF, 0x71afdb]); // Colores de Atl. Tucumán
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Atl. Tucumán!", null, 0x71afdb, "bold");
            }
        }
    }

    if (message == "!atltucuman") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!atltucuman";
                room.setTeamColors(Team.BLUE, 180, 0x575a5b, [0x71afdb, 0xFFFFFF, 0x71afdb]); // Colores de Atl. Tucumán
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Atl. Tucumán!", null, 0x71afdb, "bold");
            }
        }
    }

    if (message == "!fer") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!fer";
                room.setTeamColors(Team.RED, 66, 0xFFFFFF, [0x046c43, 0x219a57, 0x2db563]); // Colores de Ferro
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Ferro!", null, 0x219a57, "bold");
            }
        }
    }

    if (message == "!fer") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!fer";
                room.setTeamColors(Team.BLUE, 66, 0xFFFFFF, [0x046c43, 0x219a57, 0x2db563]); // Colores de Ferro
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Ferro!", null, 0x219a57, "bold");
            }
        }
    }

    if (message == "!nuy") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!nuy";
                room.setTeamColors(Team.RED, 180, 0xf9020a, [0xFAF9FF]); // Colores de Nacional (UY)
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Nacional (UY)!", null, 0xFAF9FF, "bold");
            }
        }
    }

    if (message == "!nuy") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!nuy";
                room.setTeamColors(Team.BLUE, 180, 0xf9020a, [0xFAF9FF]); // Colores de Nacional (UY)
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Nacional (UY)!", null, 0xFAF9FF, "bold");
            }
        }
    }

    if (message == "!peñ") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!peñ";
                room.setTeamColors(Team.RED, 180, 0xFFFFFF, [0x272525, 0xF7CF00, 0x272525]); // Colores de Peñarol
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Peñarol!", null, 0xF7CF00, "bold");
            }
        }
    }

    if (message == "!peñ") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!peñ";
                room.setTeamColors(Team.BLUE, 180, 0xFFFFFF, [0x272525, 0xF7CF00, 0x272525]); // Colores de Peñarol
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Peñarol!", null, 0xF7CF00, "bold");
            }
        }
    }

    if (message == "!qui") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!qui";
                room.setTeamColors(Team.RED, 90, 0x032051, [0x9BADBC, 0xFFFFFF, 0xFFFFFF]); // Colores de Quilmes
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Quilmes!", null, 0x9BADBC, "bold");
            }
        }
    }

    if (message == "!qui") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!qui";
                room.setTeamColors(Team.BLUE, 90, 0x032051, [0x9BADBC, 0xFFFFFF, 0xFFFFFF]); // Colores de Quilmes
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Quilmes!", null, 0x9BADBC, "bold");
            }
        }
    }

    if (message == "!chicago") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!chicago";
                room.setTeamColors(Team.RED, 360, 0xFFFFFF, [0x3AC991, 0x000000, 0x3AC991]); // Colores de Nueva Chicago
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Nueva Chicago!", null, 0x3AC991, "bold");
            }
        }
    }

    if (message == "!chicago") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!chicago";
                room.setTeamColors(Team.BLUE, 360, 0xFFFFFF, [0x3AC991, 0x000000, 0x3AC991]); // Colores de Nueva Chicago
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Nueva Chicago!", null, 0x3AC991, "bold");
            }
        }
    }

    if (message == "!mor") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!mor";
                room.setTeamColors(Team.RED, 90, 0x242b35, [0xFFFFFF, 0xE21C1C, 0xFFFFFF]); // Colores de Morón
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Morón!", null, 0xE21C1C, "bold");
            }
        }
    }

    if (message == "!mor") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!mor";
                room.setTeamColors(Team.BLUE, 90, 0x242b35, [0xFFFFFF, 0xE21C1C, 0xFFFFFF]); // Colores de Morón
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Morón!", null, 0xE21C1C, "bold");
            }
        }
    }

    if (message == "!uni") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!uni";
                room.setTeamColors(Team.RED, 180, 0x007fd6, [0xda251d, 0xffffff, 0xda251d]); // Colores de Unión
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Unión!", null, 0xda251d, "bold");
            }
        }
    }

    if (message == "!uni") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!uni";
                room.setTeamColors(Team.BLUE, 180, 0x007fd6, [0xda251d, 0xffffff, 0xda251d]); // Colores de Unión
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Unión!", null, 0xda251d, "bold");
            }
        }
    }

    if (message == "!colon") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!colon";
                room.setTeamColors(Team.RED, 0, 0xe0c069, [0xc80000, 0x000000]); // Colores de Colón
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Colón!", null, 0xc80000, "bold");
            }
        }
    }

    if (message == "!colon") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!colon";
                room.setTeamColors(Team.BLUE, 0, 0xe0c069, [0xc80000, 0x000000]); // Colores de Colón
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Colón!", null, 0xc80000, "bold");
            }
        }
    }

    if (message == "!asi") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!asi";
                room.setTeamColors(Team.RED, 33, 0xFFFFFF, [0x00aeef, 0xee3e34, 0x00aeef]); // Colores de Arsenal de Sarandí
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Arsenal de Sarandí!", null, 0xee3e34, "bold");
            }
        }
    }

    if (message == "!asi") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!asi";
                room.setTeamColors(Team.BLUE, 33, 0xFFFFFF, [0x00aeef, 0xee3e34, 0x00aeef]); // Colores de Arsenal de Sarandí
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Arsenal de Sarandí!", null, 0xee3e34, "bold");
            }
        }
    }

    if (message == "!doc") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!doc";
                room.setTeamColors(Team.RED, 180, 0xFFFFFF, [0x254494, 0xF3C706, 0x254494]); // Colores de Dock Sud
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Dock Sud!", null, 0xF3C706, "bold");
            }
        }
    }

    if (message == "!doc") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!doc";
                room.setTeamColors(Team.BLUE, 180, 0xFFFFFF, [0x254494, 0xF3C706, 0x254494]); // Colores de Dock Sud
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Dock Sud!", null, 0xF3C706, "bold");
            }
        }
    }

    if (message == "!dan") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!dan";
                room.setTeamColors(Team.RED, 50, 0xdb0d24, [0xFFFFFF, 0x131514, 0xFFFFFF]); // Colores de Danubio
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Danubio!", null, 0xdb0d24, "bold");
            }
        }
    }

    if (message == "!dan") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!dan";
                room.setTeamColors(Team.BLUE, 50, 0xdb0d24, [0xFFFFFF, 0x131514, 0xFFFFFF]); // Colores de Danubio
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Danubio!", null, 0xdb0d24, "bold");
            }
        }
    }

    if (message == "!sac") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!sac";
                room.setTeamColors(Team.RED, 180, 0x201766, [0xC8B8F8, 0xFFFFFF, 0xC8B8F8]); // Colores de Sacachispas
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Sacachispas!", null, 0x201766, "bold");
            }
        }
    }

    if (message == "!sac") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!sac";
                room.setTeamColors(Team.BLUE, 180, 0x201766, [0xC8B8F8, 0xFFFFFF, 0xC8B8F8]); // Colores de Sacachispas
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Sacachispas!", null, 0x201766, "bold");
            }
        }
    }

    if (message == "!rie") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!rie";
                room.setTeamColors(Team.RED, 40, 0xFFFFFF, [0x1D1C21]); // Colores de DEP. RIESTRA
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Dep. Riestra!", null, 0x1D1C21, "bold");
            }
        }
    }

    if (message == "!rie") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!rie";
                room.setTeamColors(Team.BLUE, 40, 0xFFFFFF, [0x1D1C21]); // Colores de DEP. RIESTRA
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Dep. Riestra!", null, 0x1D1C21, "bold");
            }
        }
    }

    if (message == "!cco") {
        if (player.team == 1) {
            if (player.id == TeamR[0].id) {
                CaptainChoice = "!cco";
                room.setTeamColors(Team.RED, 180, 0xc22b34, [0x231f20, 0xFFFFFF, 0x231f20]); // Colores de Central Córdoba
                room.sendAnnouncement("El capitán del equipo rojo, " + player.name + ", eligió el uniforme de Central Córdoba!", null, 0x231f20, "bold");
            }
        }
    }

    if (message == "!cco") {
        if (player.team == 1) {
            if (player.id == TeamB[0].id) {
                CaptainChoice = "!cco";
                room.setTeamColors(Team.BLUE, 180, 0xc22b34, [0x231f20, 0xFFFFFF, 0x231f20]); // Colores de Central Córdoba
                room.sendAnnouncement("El capitán del equipo azul, " + player.name + ", eligió el uniforme de Central Córdoba!", null, 0x231f20, "bold");
            }
        }
    }


            if (message.toLowerCase().substr(0, 10) == '!register ') {
                setRegister(player, message.substr(10));
                return false;
            }

            // !login senha
            if (message.toLowerCase().substr(0, 7) == '!login ') {
                getLogin(player, message.substr(7));
                return false;
            }
            if (message.length > 65) {
                room.sendAnnouncement("", player.id);
                return false;
            }
            messageHistory.push(player.id);
            messageCounter++;
            if (messageCounter === 3) {
                if (messageHistory[messageHistory.length - 1] === player.id && messageHistory[messageHistory.length - 2] === player.id && messageHistory[messageHistory.length - 3] === player.id) {
                    room.sendChat("Alerta de spam.", player.id);
                }
            }
            if (messageCounter === 6) {
                if (messageHistory[messageHistory.length - 1] === player.id && messageHistory[messageHistory.length - 2] === player.id && messageHistory[messageHistory.length - 3] === player.id && messageHistory[messageHistory.length - 4] === player.id && messageHistory[messageHistory.length - 5] === player.id && messageHistory[messageHistory.length - 6] === player.id) {
                    room.kickPlayer(player.id, "Modera mas tus mensajes, comunista", true);
                }
            }
            if (messageHistory[messageHistory.length - 1] !== messageHistory[messageHistory.length - 2]) {
                messageCounter = 1;
            }
            if (player.name === "hitler" && player.name === "hitler") {
                messageCounter = 1;
            }
        }
    

    messageHistory.push(player.id);
    messageCounter++;
    if (messageCounter === 1545) {
        if (messageHistory[messageHistory.length - 1] === player.id && messageHistory[messageHistory.length - 2] === player.id && messageHistory[messageHistory.length - 3] === player.id && messageHistory[messageHistory.length - 4] === player.id) {
            room.sendChat(":)", player.id);
        }
    }
    // banear al jugador si se escriben 6 mensajes seguidos (deshabilitado)
    msg = message;
    message = message;
    originalMessage = message;
    message = message.split(/ +/);
    player.team != Team.SPECTATORS ? setActivity(player, 0) : null;
    if (["!help", "!ayuda"].includes(message[0].toLowerCase())) {
        room.sendAnnouncement("[📄] Comandos : !me, !tc, !pv, !uni, !mostrarme, !rankinfo, !sequencia, !msgdodia, !games, !wins, !goals, !assists, !cs, !afks, !mutes, !bans.", player.id, 0x309D2B, "bold");
        player.admin ? room.sendAnnouncement("[📄] Admin : !rr,  !mute <duration = 3> #<id>, !unmute all/#<id>, !clearbans <number = all>, !slow <duration>, !endslow", player.id, 0x309D2B, "bold") : null;
    } 
    
    if (["!chooseadm"].includes(message[0].toLowerCase())) {
        if (message[1] == "on") {
            room.sendAnnouncement(player.name + " Modo de reclutamiento activado!", null, 0x55bae2, "normal");
            choose = true;
        }
        else if (message[1] == "off") {
            room.sendAnnouncement(player.name + " Modo de reclutamiento desactivado.", null, 0xf2a000, "normal")
            choose = false;
        }
    }

    if (["!uni", "!unis"].includes(message[0].toLowerCase())) {
        room.sendAnnouncement("_______________________________________", player.id, Cor.Amarelo, "bold");
        room.sendAnnouncement("Seleciones:", player.id, Cor.Amarelo, "bold");
        room.sendAnnouncement("Brasil [!bra], Alemania [!ale], Argentina [!arg], España [!esp], Portugal [!por], Chile [!chi], Croacia [!cro], Bolivia [!bol], Paraguay [!par], Venezuela [!ven]  ", player.id, Cor.Branco, "normal");
        room.sendAnnouncement("Italia [!ita], Uruguay [!uru], Francia [!fra], Inglaterra [!ing], Bélgica [!bel], Holanda [!hol], Colombia[!col], Peru [!per], Qatar [!qat]", player.id, Cor.Branco, "normal");
        room.sendAnnouncement("_______________________________________", player.id, Cor.Amarelo, "bold");
        room.sendAnnouncement("Equipos Sudamericanos:", player.id, Cor.Amarelo, "bold");
        room.sendAnnouncement("River [!riv], Boca [!boc], Racing [!rac], Independiente [!cai], Newell´s [!nob], Rosario Central [!ros], Aldosivi [!ald], Gimnasia LP [!gim], Defensa y Justicia [!dyj]", player.id, Cor.Branco, "normal");
        room.sendAnnouncement("Cruzeiro [!cru], Palmeiras [!pal], Gremio [!gre], Estudiantes LP [!est], Banfield [!banfield], Lanus [!lan], Atl Paranaense [!atp], Huracan [!hur], Tigre [!tig] ", player.id, Cor.Branco, "normal");
        room.sendAnnouncement("Argentinos Juniors [!aaj], All Boys [!alb], Atlanta [!atl], Belgrano [!bel], Chacarita [!cha], Talleres [!tal], Platense [!pla], Olimpo [!oli], San Martin de Tucuman [!smt], Atl Tucuman [!att], Ferro [!fer], Nacional UY [!nuy]", player.id, Cor.Branco, "normal");
        room.sendAnnouncement("Peñarol [!peñ], Quilmes [!qui], Chicago [!chicago], Moron [!mor], Union Sfe [!uni], Colon [!colon], Arsenal Sarandi [!asi], DockSud [!doc], Danubio [!dan], Sacachispas [!sac], Riestra [!rie], Central Cordoba[!cco]", player.id, Cor.Branco, "normal");
        room.sendAnnouncement(".......", player.id, Cor.Branco, "normal");
        room.sendAnnouncement("_______________________________________", player.id, Cor.Amarelo, "bold");
        room.sendAnnouncement("Equipos Europeos:", player.id, Cor.Amarelo, "bold");
        room.sendAnnouncement("Atl Madrid [!atm], Sevilla [!sev], Barcelona [fcb], Real Madrid [!rma], Inter [!int], Milan [!mil], Tottenham [!tot], Liverpool [!liv], Napoli [!nap]", player.id, Cor.Branco, "normal");
        room.sendAnnouncement("Bayern Munich [!bay], Borussia Dortmund [!dor], Juventus [!juv], Manchester United [!mnu], Manchester City [!mci], Arsenal FC [!afc], Chelsea [!che]", player.id, Cor.Branco, "normal");
        room.sendAnnouncement("Aston Villa [!ast], Fullham [!ful], Leicester [!lei], Ajax [!aja], PSV [!psv], Feyenoord [!fey], PSG [!psg], Marsella [!mar], Roma [!rom] ", player.id, Cor.Branco, "normal");
        room.sendAnnouncement("_______________________________________", player.id, Cor.Amarelo, "bold");
    }
        if (["!ranks"].includes(message[0].toLowerCase())) {
            room.sendAnnouncement("_______________________________________", player.id, Cor.Amarelo, "bold");
            room.sendAnnouncement("Ranks por puntos:", player.id, Cor.Amarelo, "bold");
            room.sendAnnouncement("Hierro I - 0 - 99 puntos", player.id, 0xbc5e00, "normal");
            room.sendAnnouncement("Hierro II - 100 - 199 puntos", player.id, 0xbc5e00, "normal");
            room.sendAnnouncement("Hierro III - 200 - 299 puntos", player.id, 0xbc5e00, "normal");
            room.sendAnnouncement("Bronce I - 300 - 399 puntos", player.id, 0xA2A2A2, "normal");
            room.sendAnnouncement("Bronce II - 400 - 499 puntos", player.id, 0xA2A2A2, "normal");
            room.sendAnnouncement("Bronce III - 500 - 599 puntos", player.id, 0xA2A2A2, "normal");
            room.sendAnnouncement("Plata I - 600 - 699 puntos", player.id, 0xEAC274, "normal");
            room.sendAnnouncement("Plata II - 700 - 799 puntos", player.id, 0xEAC274, "normal");
            room.sendAnnouncement("Plata III - 800 - 899 puntos", player.id, 0xEAC274, "normal");
            room.sendAnnouncement("Digite '!ranks2' para ver más", player.id, Cor.Amarelo, "bold");
            room.sendAnnouncement("_______________________________________", player.id, Cor.Amarelo, "bold");
        }

    if (["!ranks2"].includes(message[0].toLowerCase())) {
    room.sendAnnouncement("_______________________________________", player.id, Cor.Amarelo, "bold");
    room.sendAnnouncement("Ranks por puntos (2ª página):", player.id, Cor.Amarelo, "bold");
    room.sendAnnouncement("Oro I - 900 - 999 puntos", player.id, 0x62AEE3, "normal");
    room.sendAnnouncement("Oro II - 1000 - 1099 puntos", player.id, 0x62AEE3, "normal");
    room.sendAnnouncement("Oro III - 1100 - 1199 puntos", player.id, 0x62AEE3, "normal");
    room.sendAnnouncement("Platino I - 1200 - 1299 puntos", player.id, 0x7cd3fa, "normal");
    room.sendAnnouncement("Platino II - 1300 - 1399 puntos", player.id, 0x7cd3fa, "normal");
    room.sendAnnouncement("Platino III - 1400 - 1499 puntos", player.id, 0x7cd3fa, "normal");
    room.sendAnnouncement("Diamante I - 1500 - 1599 puntos", player.id, 0x7cd3fa, "normal");
    room.sendAnnouncement("Diamante II - 1600 - 1699 puntos", player.id, 0x7cd3fa, "normal");
    room.sendAnnouncement("Diamante III - 1700 - 1799 puntos", player.id, 0x7cd3fa, "normal");
    room.sendAnnouncement("Leyenda - 1800+ puntos", player.id, 0xf77104, "bold");
    room.sendAnnouncement("_______________________________________", player.id, Cor.Amarelo, "bold"); 
}

    else if (["!afk"].includes(message[0].toLowerCase())) {
        if (players.length != 1 && player.team != Team.SPECTATORS) {
            if (player.team == Team.RED && streak > 0 && room.getScores() == null) {
                room.setPlayerTeam(player.id, Team.SPECTATORS);
            } else {
                room.sendAnnouncement("No podes ponerte AFK mientras estas jugando, enfermo!", player.id, 0xFF7B08);
                return false;
            }
        } else if (players.length == 1 && !getAFK(player)) {
            room.setPlayerTeam(player.id, Team.SPECTATORS);
        }
        setAFK(player, !getAFK(player));
        room.sendAnnouncement(player.name + (getAFK(player) ? " se puso AFK, re trolo!" : " volvió el gordo del AFK!"), null, (getAFK(player) ? 0xFF7B08 : 0x8FFF8F));
        getAFK(player) ? updateRoleOnPlayerOut() : updateRoleOnPlayerIn();
        localStorage.getItem(getAuth(player)) ? stats = JSON.parse(localStorage.getItem(getAuth(player))) : stats = [0, 0, 0, 0, "0.00", 0, 0, 0, 0, "0.00", "player"];
        setTimeout(() => {
            if (getAFK(player) && stats[Ss.RL] != "vip") {
                room.kickPlayer(player.id, "Tiempo de afk excedido, abrazo!", false)
            }
        }, 30 * 60 * 1000)
        return false;
    } else if (["!afks", "!afklist"].includes(message[0].toLowerCase())) {
        var cstm = "[PV] Lista de AFK : ";
        for (var i = 0; i < extendedP.length; i++) {
            if (room.getPlayer(extendedP[i][eP.ID]) != null && getAFK(room.getPlayer(extendedP[i][eP.ID]))) {
                if (140 - cstm.length < (room.getPlayer(extendedP[i][eP.ID]).name + ", ").length) {
                    room.sendChat(cstm, player.id);
                    cstm = "... ";
                }
                cstm += room.getPlayer(extendedP[i][eP.ID]).name + ", ";
            }
        }
        if (cstm == "[PV] Lista de AFK : ") {
            room.sendChat("[PV] No hay ninguna lista de AFK!", player.id);
            return false;
        }
        cstm = cstm.substring(0, cstm.length - 2);
        cstm += ".";
        room.sendChat(cstm, player.id);
    } else if (["!me"].includes(message[0].toLowerCase())) {
        var stats;
        localStorage.getItem(getAuth(player)) ? stats = JSON.parse(localStorage.getItem(getAuth(player))) : stats = [0, 0, 0, 0, "0.00", 0, 0, 0, 0, "0.00"];
        room.sendAnnouncement("[📄] Stats de " + player.name + ": 🎮 Partidas jugadas: " + stats[Ss.GA] + ", ✅ Victorias: " + stats[Ss.WI] + ", ❌ Derrotas: " + stats[Ss.LS] + ", WR: " + stats[Ss.WR] + "%, ⚽️ Gols: " + stats[Ss.GL] + ", 👟 Asistencias: " + stats[Ss.AS] + ", 🤚 GK: " + stats[Ss.GK] + ", 🤚 Vallas: " + stats[Ss.CS] + ", 🤚 CS%: " + stats[Ss.CP] + "%", player.id, 0x73EC59, "bold");
        room.sendAnnouncement("「👓」 Este mensaje solo se puede ver, si desea mostrar sus Stats, utilice el comando '!mostrarme'!", player.id, 0xFF7900, "bold");
    } else if (["!mostrarme"].includes(message[0].toLowerCase())) {
        var stats;
        localStorage.getItem(getAuth(player)) ? stats = JSON.parse(localStorage.getItem(getAuth(player))) : stats = [0, 0, 0, 0, "0.00", 0, 0, 0, 0, "0.00"];
        room.sendAnnouncement("[📄] El jugador " + player.name + " mostro sus stats! '!mostrarme'!", null, 0xFF7900, "bold")
        room.sendAnnouncement("[📄] Stats de " + player.name + ": 🎮 Partidas Jugadas: " + stats[Ss.GA] + ", ✅ Victorias: " + stats[Ss.WI] + ", ❌ Derrotas: " + stats[Ss.LS] + ", WR: " + stats[Ss.WR] + "%, ⚽️ Gols: " + stats[Ss.GL] + ", 👟 Asistencias: " + stats[Ss.AS] + ", 🤚 GK: " + stats[Ss.GK] + ", 🤚 Vallas: " + stats[Ss.CS] + ", 🤚 CS%: " + stats[Ss.CP] + "%", null, 0x73EC59, "bold");
    } else if (["!games"].includes(message[0].toLowerCase())) {
        var tableau = [];
        try {
            Object.keys(localStorage).forEach(function(key) {
                if (!["player_name", "view_mode", "geo", "avatar", "player_auth_key"].includes(key)) {
                    tableau.push([(JSON.parse(localStorage.getItem(key))[Ss.NK]), (JSON.parse(localStorage.getItem(key))[Ss.GA])]);
                }
            });
        } catch {

        }
        if (tableau.length < 5) {
            room.sendAnnouncement("[PV] No jugaste suficientes partidas, chinchulin", player.id, 0xFF0000);
            return false;
        }
        tableau.sort(function(a, b) {
            return b[1] - a[1];
        });
        room.sendAnnouncement("[📄] 🎮 Partidas Jugadas> #1 " + tableau[0][0] + ": " + tableau[0][1] + " #2 " + tableau[1][0] + ": " + tableau[1][1] + " #3 " + tableau[2][0] + ": " + tableau[2][1] + " #4 " + tableau[3][0] + ": " + tableau[3][1] + " #5 " + tableau[4][0] + ": " + tableau[4][1], player.id, 0x73EC59);

        return false;
    } else if (["!wins"].includes(message[0].toLowerCase())) {
        var tableau = [];
        try {
            Object.keys(localStorage).forEach(function(key) {
                if (!["player_name", "view_mode", "geo", "avatar", "player_auth_key"].includes(key)) {
                    tableau.push([(JSON.parse(localStorage.getItem(key))[Ss.NK]), (JSON.parse(localStorage.getItem(key))[Ss.WI])]);
                }
            });
        } catch {

        }
        if (tableau.length < 5) {
            room.sendAnnouncement("[PV] No jugaste suficientes partidas, chinchulin", player.id, 0x73EC59);
            return false;
        }
        tableau.sort(function(a, b) {
            return b[1] - a[1];
        });
        room.sendAnnouncement("[📄] ✅ Victorias> #1 " + tableau[0][0] + ": " + tableau[0][1] + " #2 " + tableau[1][0] + ": " + tableau[1][1] + " #3 " + tableau[2][0] + ": " + tableau[2][1] + " #4 " + tableau[3][0] + ": " + tableau[3][1] + " #5 " + tableau[4][0] + ": " + tableau[4][1], player.id, 0x73EC59);

        return false;
    } else if (["!goats"].includes(message[0].toLowerCase())) {
        var tableau = [];
        try {
            Object.keys(localStorage).forEach(function(key) {
                if (!["player_name", "view_mode", "geo", "avatar", "player_auth_key"].includes(key) && JSON.parse(localStorage.getItem(key))[Ss.WI] > 400) {
                    tableau.push([(JSON.parse(localStorage.getItem(key))[Ss.NK]), (JSON.parse(localStorage.getItem(key))[Ss.WI])]);
                }
            });
        } catch {

        }
        if (tableau.length < 5) {
            room.sendAnnouncement("[PV] No jugaste suficientes partidas, chinchulin", player.id, 0x73EC59);
            return false;
        }
        tableau.sort(function(a, b) {
            return b[1] - a[1];
        });
        room.sendAnnouncement("[📄] ✅ GOATS> #1 " + tableau[0][0] + ": " + tableau[0][1] + " #2 " + tableau[1][0] + ": " + tableau[1][1] + " #3 " + tableau[2][0] + ": " + tableau[2][1] + " #4 " + tableau[3][0] + ": " + tableau[3][1] + " #5 " + tableau[4][0] + ": " + tableau[4][1], player.id, 0x73EC59);

        return false;
    } else if (["!goals"].includes(message[0].toLowerCase())) {
        var tableau = [];
        try {
            Object.keys(localStorage).forEach(function(key) {
                if (!["player_name", "view_mode", "geo", "avatar", "player_auth_key"].includes(key)) {
                    tableau.push([(JSON.parse(localStorage.getItem(key))[Ss.NK]), (JSON.parse(localStorage.getItem(key))[Ss.GL])]);
                }
            });
        } catch {

        }
        if (tableau.length < 5) {
            room.sendAnnouncement("[📄] No jugaste suficientes partidas, chinchulin", player.id, 0x73EC59);
            return false;
        }
        tableau.sort(function(a, b) {
            return b[1] - a[1];
        });
        room.sendAnnouncement("[📄] ⚽️ Goles> #1 " + tableau[0][0] + ": " + tableau[0][1] + " #2 " + tableau[1][0] + ": " + tableau[1][1] + " #3 " + tableau[2][0] + ": " + tableau[2][1] + " #4 " + tableau[3][0] + ": " + tableau[3][1] + " #5 " + tableau[4][0] + ": " + tableau[4][1], player.id, 0x73EC59);

        return false;
    } else if (["!assists"].includes(message[0].toLowerCase())) {
        var tableau = [];
        try {
            Object.keys(localStorage).forEach(function(key) {
                if (!["player_name", "view_mode", "geo", "avatar", "player_auth_key"].includes(key)) {
                    tableau.push([(JSON.parse(localStorage.getItem(key))[Ss.NK]), (JSON.parse(localStorage.getItem(key))[Ss.AS])]);
                }
            });
        } catch {

        }
        if (tableau.length < 5) {
            room.sendAnnouncement("[PV] No jugaste suficientes partidas, chinchulin", player.id);
            return false;
        }
        tableau.sort(function(a, b) {
            return b[1] - a[1];
        });
        room.sendAnnouncement("[📄] 👟 Asistencias> #1 " + tableau[0][0] + ": " + tableau[0][1] + " #2 " + tableau[1][0] + ": " + tableau[1][1] + " #3 " + tableau[2][0] + ": " + tableau[2][1] + " #4 " + tableau[3][0] + ": " + tableau[3][1] + " #5 " + tableau[4][0] + ": " + tableau[4][1], player.id, 0x73EC59);

        return false;
    } else if (["!cs"].includes(message[0].toLowerCase())) {
        var tableau = [];
        try {
            Object.keys(localStorage).forEach(function(key) {
                if (!["player_name", "view_mode", "geo", "avatar", "player_auth_key"].includes(key)) {
                    tableau.push([(JSON.parse(localStorage.getItem(key))[Ss.NK]), (JSON.parse(localStorage.getItem(key))[Ss.CS])]);
                }
            });
        } catch {

        }
        if (tableau.length < 5) {
            room.sendAnnouncement("[PV] No jugaste suficientes partidas, chinchulin", player.id, 0x73EC59);
            return false;
        }
        tableau.sort(function(a, b) {
            return b[1] - a[1];
        });
        room.sendAnnouncement("[📄] 🤚 Partidas invictas> #1 " + tableau[0][0] + ": " + tableau[0][1] + " #2 " + tableau[1][0] + ": " + tableau[1][1] + " #3 " + tableau[2][0] + ": " + tableau[2][1] + " #4 " + tableau[3][0] + ": " + tableau[3][1] + " #5 " + tableau[4][0] + ": " + tableau[4][1], player.id, 0x73EC59);

        return false;
    } 
    
    else if (["!loginadm"].includes(message[0].toLowerCase())) {
        if (message[1] == adminPassword) {
            room.setPlayerAdmin(player.id, true);
            var stats;
            localStorage.getItem(getAuth(player)) ? stats = JSON.parse(localStorage.getItem(getAuth(player))) : stats = [0, 0, 0, 0, "0.00", 0, 0, 0, 0, "0.00", "player", player.name];
            if (stats[Ss.RL] != "master") {
                stats[Ss.RL] = "master";
                room.sendAnnouncement(player.name + " el gordo supremo entró como Administrador!", null, 0xFF7900, 2);
                localStorage.setItem(getAuth(player), JSON.stringify(stats));
            }
        }
    }

    else if (["!mutes", "!mutelist"].includes(message[0].toLowerCase())) {
        var cstm = "[PV] Lista de mutados : ";
        for (var i = 0; i < extendedP.length; i++) {
            if (room.getPlayer(extendedP[i][eP.ID]) != null && getMute(room.getPlayer(extendedP[i][eP.ID]))) {
                if (140 - cstm.length < (room.getPlayer(extendedP[i][eP.ID]).name + "[" + (extendedP[i][eP.ID]) + "], ").length) {
                    room.sendChat(cstm, player.id);
                    cstm = "... ";
                }
                cstm += room.getPlayer(extendedP[i][eP.ID]).name + "[" + (extendedP[i][eP.ID]) + "], ";
            }
        }
        if (cstm == "[PV] Lista de mutados : ") {
            room.sendChat("[PV] No hay nadie en la lista de muteados, abrazo!", player.id);
            return false;
        }
        cstm = cstm.substring(0, cstm.length - 2);
        cstm += ".";
        room.sendChat(cstm, player.id);

        
    } else if (["!mute"].includes(message[0].toLowerCase())) {
        if (player.admin) {
            updateTeams();
            var timeOut;
            if (!Number.isNaN(Number.parseInt(message[1])) && message.length > 1) {
                if (Number.parseInt(message[1]) > 0) {
                    timeOut = Number.parseInt(message[1]) * 60 * 1000;
                } else {
                    timeOut = 3 * 60 * 1000;
                }
                if (message[2].length > 1 && message[2][0] == "#") {
                    message[2] = message[2].substring(1, message[2].length);
                    if (!Number.isNaN(Number.parseInt(message[2])) && room.getPlayer(Number.parseInt(message[2])) != null) {
                        if (room.getPlayer(Number.parseInt(message[2])).admin || getMute(room.getPlayer(Number.parseInt(message[2])))) {
                            return false;
                        }
                        setTimeout(function(player) {
                            setMute(player, false);
                        }, timeOut, room.getPlayer(Number.parseInt(message[2])));
                        setMute(room.getPlayer(Number.parseInt(message[2])), true);
                        room.sendChat(room.getPlayer(Number.parseInt(message[2])).name + " muteado por tener KUKA-12 " + (timeOut / 60000) + " minutos!");
                    }
                }
            } else if (Number.isNaN(Number.parseInt(message[1]))) {
                if (message[1].length > 1 && message[1][0] == "#") {
                    message[1] = message[1].substring(1, message[1].length);
                    if (!Number.isNaN(Number.parseInt(message[1])) && room.getPlayer(Number.parseInt(message[1])) != null) {
                        if (room.getPlayer(Number.parseInt(message[1])).admin || getMute(room.getPlayer(Number.parseInt(message[1])))) {
                            return false;
                        }
                        setTimeout(function(player) {
                            setMute(player, false);
                        }, 3 * 60 * 1000, room.getPlayer(Number.parseInt(message[1])));
                        setMute(room.getPlayer(Number.parseInt(message[1])), true);
                        room.sendChat(room.getPlayer(Number.parseInt(message[1])).name + " fue muteado por 3 minutos!");
                    }
                }
            }
        }

    } else if (["!unmute"].includes(message[0].toLowerCase())) {
        if (player.admin && message.length >= 2) {
            if (message[1] == "all") {
                extendedP.forEach((ePlayer) => {
                    ePlayer[eP.MUTE] = false;
                });
                room.sendChat("Se terminó la dictadura, pueden hablar");
            } else if (!Number.isNaN(Number.parseInt(message[1])) && room.getPlayer(Number.parseInt(message[1])) != null && getMute(room.getPlayer(Number.parseInt(message[1])))) {
                setMute(room.getPlayer(Number.parseInt(message[1])), false);
                room.sendChat(room.getPlayer(Number.parseInt(message[1])).name + " fue desmutado!");
            } else if (Number.isNaN(Number.parseInt(message[1]))) {
                if (message[1].length > 1 && message[1][0] == "#") {
                    message[1] = message[1].substring(1, message[1].length);
                    if (!Number.isNaN(Number.parseInt(message[1])) && room.getPlayer(Number.parseInt(message[1])) != null && getMute(room.getPlayer(Number.parseInt(message[1])))) {
                        setMute(room.getPlayer(Number.parseInt(message[1])), false);
                        room.sendChat(room.getPlayer(Number.parseInt(message[1])).name + " fue desmutado!");
                    }
                }
            }
        }
    } else if (["!banlist", "!bans"].includes(message[0].toLowerCase())) {
        if (banList.length == 0) {
            room.sendChat("[PV] ¡Todavia no hay nadie en lista negra, agregá a los no arios!", player.id);
            return false;
        }
        var cstm = "[PV] Acá te muestro los MEGA comunistas que estan baneados: ";
        for (var i = 0; i < banList.length; i++) {
            if (140 - cstm.length < (banList[i][0] + "[" + (banList[i][1]) + "], ").length) {
                room.sendChat(cstm, player.id);
                cstm = "... ";
            }
            cstm += banList[i][0] + "[" + (banList[i][1]) + "], ";
        }
        cstm = cstm.substring(0, cstm.length - 2);
        cstm += ".";
        room.sendChat(cstm, player.id);
    } else if (["!clearbans"].includes(message[0].toLowerCase())) {
        if (player.admin) {
            if (message.length == 1) {
                room.clearBans();
                room.sendChat("Ya limpié a los zurdos de la lista de baneos!");
                banList = [];
            }
            if (message.length == 2) {
                if (!Number.isNaN(Number.parseInt(message[1]))) {
                    if (Number.parseInt(message[1]) > 0) {
                        ID = Number.parseInt(message[1]);
                        room.clearBan(ID);
                        if (banList.length != banList.filter((array) => array[1] != ID)) {
                            room.sendChat(banList.filter((array) => array[1] == ID)[0][0] + " baneado por la dictadura de Nachoide, abrazo!");
                        }
                        setTimeout(() => {
                            banList = banList.filter((array) => array[1] != ID);
                        }, 20);
                    }
                }
            }
        }
    } else if (["!bb", "!bye", "!cya", "!gn"].includes(message[0].toLowerCase())) {
        room.kickPlayer(player.id, "👋 Hasta Pronto!", false);
    }
    else if (["!ds", "!disc", "!discord"].includes(message[0].toLowerCase())) {
        room.sendAnnouncement("                                        ▒█▀▀▄ ▀█▀ ▒█▀▀▀█ ▒█▀▀█ ▒█▀▀▀█ ▒█▀▀█ ▒█▀▀▄ ", null, 0x9250FD, 'bold')
        room.sendAnnouncement("                                        ▒█░▒█ ▒█░ ░▀▀▀▄▄ ▒█░░░ ▒█░░▒█ ▒█▄▄▀ ▒█░▒█ ", null, 0x8466FD, 'bold')
        room.sendAnnouncement("                                        ▒█▄▄▀ ▄█▄ ▒█▄▄▄█ ▒█▄▄█ ▒█▄▄▄█ ▒█░▒█ ▒█▄▄▀ ", null, 0x7B73FD, 'bold');
        room.sendAnnouncement("                                        💬 Discord Link: ➡ https://discord.gg/ATd63bS9He ⬅", null, 0xF6FF43, 'bold');
    }
 

    if (link.includes(message[0])) {
        room.sendAnnouncement("No podes enviar links acá. No entendes que es una dictadura esto?  " + player.name, player.id, Cor.Warn, "italic", 2);
        return false;
    }

    if (link.includes(message[1])) {
        room.sendAnnouncement("No podes enviar links acá. No entendes que es una dictadura esto? " + player.name, player.id, Cor.Warn, "italic", 2);
        return false;
    }

    if (link.includes(message[2])) {
        room.sendAnnouncement("No podes enviar links acá. No entendes que es una dictadura esto? " + player.name, player.id, Cor.Warn, "italic", 2);
        return false;
    }

    if (link.includes(message[3])) {
        room.sendAnnouncement("No podes enviar links acá. No entendes que es una dictadura esto? " + player.name, player.id, Cor.Warn, "italic", 2);
        return false;
    }

    if (link.includes(message[4])) {
        room.sendAnnouncement("No podes enviar links acá. No entendes que es una dictadura esto? " + player.name, player.id, Cor.Warn, "italic", 2);
        return false;
    }

    if (link.includes(message[5])) {
        room.sendAnnouncement("No podes enviar links acá. No entendes que es una dictadura esto? " + player.name, player.id, Cor.Warn, "italic", 2);
        return false;
    }

    if (link.includes(message[6])) {
        room.sendAnnouncement("No podes enviar links acá. No entendes que es una dictadura esto? " + player.name, player.id, Cor.Warn, "italic", 2);
        return false;
    }

    if (link.includes(message[7])) {
        room.sendAnnouncement("No podes enviar links acá. No entendes que es una dictadura esto? " + player.name, player.id, Cor.Warn, "italic", 2);
        return false;
    }

    if (message[0][0] == "!") { // no aparece el comando usado en el chat
        return false;
    }

    if (TeamR.length != 0 && TeamB.length != 0 && inChooseMode) { // cómo elegir el equipo
        if (player.id == TeamR[0].id || player.id == TeamB[0].id) { // acá nos importa si es uno de los capitanes eligiendo
            if (TeamR.length <= TeamB.length && player.id == TeamR[0].id) { // Aca nos importa si es el turno del red && el capitan rojo esta hablando
                if (["top", "auto"].includes(message[0].toLowerCase())) {
                    room.setPlayerTeam(teamS[0].id, Team.RED);
                    redCaptainChoice = "top";
                    clearTimeout(timeOutCap);
                    room.sendAnnouncement(player.name + " Elegiste al primer gordo de la lista!", null, 0x55bae2, "normal");
                    return false;
                } else if (["random", "rand"].includes(message[0].toLowerCase())) {
                    var r = getRandomInt(teamS.length);
                    room.setPlayerTeam(teamS[r].id, Team.RED);
                    redCaptainChoice = "random";
                    clearTimeout(timeOutCap);
                    room.sendAnnouncement(player.name + " Elegiste un equipo al azar", null, 0x55bae2, "normal");
                    return false;
                } else if (["bottom", "bot"].includes(message[0].toLowerCase())) {
                    room.setPlayerTeam(teamS[teamS.length - 1].id, Team.RED);
                    redCaptainChoice = "bottom";
                    clearTimeout(timeOutCap);
                    room.sendAnnouncement(player.name + " Elegiste al mas gordo de la lista!", null, 0x55bae2, "normal");
                    return false;
                } else if (!Number.isNaN(Number.parseInt(message[0]))) {
                    if (Number.parseInt(message[0]) > teamS.length || Number.parseInt(message[0]) < 1) {
                        room.sendAnnouncement("[⚠️] ¡Que pelotudooo! Contá bien el numero de jugadores, idiota!.", player.id, null, 0xfaca29, "normal");
                        return false;
                    } else {
                        room.setPlayerTeam(teamS[Number.parseInt(message[0]) - 1].id, Team.RED);
                        room.sendAnnouncement(player.name + " eligió a: " + teamS[Number.parseInt(message[0]) - 1].name + " !", null, 0x55bae2, "normal");
                        return false;
                    }
                }
            }
            if (TeamR.length > TeamB.length && player.id == TeamB[0].id) { // Aca nos importa si es el turno del red && el capitan rojo esta hablando
                if (["top", "auto"].includes(message[0].toLowerCase())) {
                    room.setPlayerTeam(teamS[0].id, Team.BLUE);
                    blueCaptainChoice = "top";
                    clearTimeout(timeOutCap);
                    room.sendAnnouncement(player.name + " Elegiste al primer gordo de la lista!", null, 0x55bae2, "normal");
                    return false;
                } else if (["random", "rand"].includes(message[0].toLowerCase())) {
                    room.setPlayerTeam(teamS[getRandomInt(teamS.length)].id, Team.BLUE);
                    blueCaptainChoice = "random";
                    clearTimeout(timeOutCap);
                    room.sendAnnouncement(player.name + " Elegiste un equipo aleatorio", null, 0x55bae2, "normal");
                    return false;
                } else if (["bottom", "bot"].includes(message[0].toLowerCase())) {
                    room.setPlayerTeam(teamS[teamS.length - 1].id, Team.BLUE);
                    blueCaptainChoice = "bottom";
                    clearTimeout(timeOutCap);
                    room.sendAnnouncement(player.name + " Elegiste al mas gordo de la lista!", null, 0x55bae2, "normal");
                    return false;
                } else if (!Number.isNaN(Number.parseInt(message[0]))) {
                    if (Number.parseInt(message[0]) > teamS.length || Number.parseInt(message[0]) < 1) {
                        room.sendAnnouncement("[⚠️] ¡Que pelotudooo! Contá bien el numero de jugadores, idiota!", player.id, null, 0xfaca29, "normal");
                        return false;
                    } else {
                        room.setPlayerTeam(teamS[Number.parseInt(message[0]) - 1].id, Team.BLUE);
                        room.sendAnnouncement(player.name + " eligió a: " + teamS[Number.parseInt(message[0]) - 1].name + "!", null, 0x55bae2, "normal");
                        return false;
                    }
                }
            }
        }
    }

    if (getMute(player)) {
        room.sendChat("Estas muteado por cogido", player.id);
        return false;
    }
    if (slowMode > 0) {
        if (!player.admin) {
            if (!SMSet.has(player.id)) {
                SMSet.add(player.id);
                setTimeout((number) => {
                    SMSet.delete(number);
                }, slowMode * 1000, player.id);
            } else {
                return false;
            }
        }
    }
    if (localStorage.getItem(getAuth(player))) {
        stats = JSON.parse(localStorage.getItem(getAuth(player)));
        var announcement = "";
        var chatColor = "";
    
        function calculateRank(stats) {
            let announcement = "";
            let chatColor = "";
        
            // Clasificación según puntos
            if (stats[Ss.NK] >= 1800) {
                announcement += "[👑] - [Puntos: " + stats[Ss.NK] + "]  ·「Leyenda」";
                chatColor = "0xf77104";
            } else if (stats[Ss.NK] >= 1700) {
                announcement += "[💎] - [Puntos: " + stats[Ss.NK] + "]  ·「Diamante III」";
                chatColor = "0x7cd3fa";
            } else if (stats[Ss.NK] >= 1600) {
                announcement += "[💎] - [Puntos: " + stats[Ss.NK] + "]  ·「Diamante II」";
                chatColor = "0x7cd3fa";
            } else if (stats[Ss.NK] >= 1500) {
                announcement += "[💎] - [Puntos: " + stats[Ss.NK] + "]  ·「Diamante I」";
                chatColor = "0x7cd3fa";
            } else if (stats[Ss.NK] >= 1400) {
                announcement += "[⚽] - [Puntos: " + stats[Ss.NK] + "]  ·「Platino III」";
                chatColor = "0x62AEE3";
            } else if (stats[Ss.NK] >= 1300) {
                announcement += "[⚽] - [Puntos: " + stats[Ss.NK] + "]  ·「Platino II」";
                chatColor = "0x62AEE3";
            } else if (stats[Ss.NK] >= 1200) {
                announcement += "[⚽] - [Puntos: " + stats[Ss.NK] + "]  ·「Platino I」";
                chatColor = "0x62AEE3";
            } else if (stats[Ss.NK] >= 1100) {
                announcement += "[⚽] - [Puntos: " + stats[Ss.NK] + "]  ·「Oro III」";
                chatColor = "0xEAC274";
            } else if (stats[Ss.NK] >= 1000) {
                announcement += "[⚽] - [Puntos: " + stats[Ss.NK] + "]  ·「Oro II」";
                chatColor = "0xEAC274";
            } else if (stats[Ss.NK] >= 900) {
                announcement += "[⚽] - [Puntos: " + stats[Ss.NK] + "]  ·「Oro I」";
                chatColor = "0xEAC274";
            } else if (stats[Ss.NK] >= 800) {
                announcement += "[⚽] - [Puntos: " + stats[Ss.NK] + "]  ·「Plata III」";
                chatColor = "0xC0C0C0";
            } else if (stats[Ss.NK] >= 700) {
                announcement += "[⚽] - [Puntos: " + stats[Ss.NK] + "]  ·「Plata II」";
                chatColor = "0xC0C0C0";
            } else if (stats[Ss.NK] >= 600) {
                announcement += "[⚽] - [Puntos: " + stats[Ss.NK] + "]  ·「Plata I」";
                chatColor = "0xC0C0C0";
            } else if (stats[Ss.NK] >= 500) {
                announcement += "[⚽] - [Puntos: " + stats[Ss.NK] + "]  ·「Bronce III」";
                chatColor = "0xCD7F32";
            } else if (stats[Ss.NK] >= 400) {
                announcement += "[⚽] - [Puntos: " + stats[Ss.NK] + "]  「Bronce II」";
                chatColor = "0xCD7F32";
            } else if (stats[Ss.NK] >= 300) {
                announcement += "[⚽] - [Puntos: " + stats[Ss.NK] + "]  ·「Bronce I」";
                chatColor = "0xCD7F32";
            } else if (stats[Ss.NK] >= 200) {
                announcement += "[⚽] - [Puntos: " + stats[Ss.NK] + "]  ·「Hierro III」";
                chatColor = "0xA9A9A9";
            } else if (stats[Ss.NK] >= 100) {
                announcement += "[⚽] - [Puntos: " + stats[Ss.NK] + "]  ·「Hierro II」";
                chatColor = "0xA9A9A9";
            } else {
                announcement += "[⚽] - [Puntos: " + stats[Ss.NK] + "]  ·「Hierro I」";
                chatColor = "0xA9A9A9";
            }
        
            console.log(announcement);
            console.log(chatColor);
            return { announcement, chatColor };
        }
    
        console.log(announcement);
        console.log(chatColor);
        console.log(originalMessage)
        announcement += player.name + ": " + originalMessage;
        room.sendAnnouncement(announcement, null, chatColor);
        return false;
    } else {
        room.sendAnnouncement(`❌ ${player.name}: No tienes estadísticas registradas.`, null, 0xABAEA7);
    }
}
room.onPlayerActivity = function(player) {
    setActivity(player, 0);
}

room.onPlayerBallKick = function(player) {
    if (lastPlayersTouched[0] == null || player.id != lastPlayersTouched[0].id) {
        !activePlay ? activePlay = true : null;
        lastTeamTouched = player.team;
        lastPlayersTouched[1] = lastPlayersTouched[0];
        lastPlayersTouched[0] = player;
    }
}

/* GESTION DE JUEGO */

room.onGameStart = function(byPlayer) {
    game = new Game(Date.now(), room.getScores(), []);
    countAFK = true;
    activePlay = false;
    goldenGoal = false;
    endGameVariable = false;
    lastPlayersTouched = [null, null];
    Rposs = 0;
    Bposs = 0;
    GKList = [];
    allReds = [];
    allBlues = [];
    room.sendAnnouncement(centerText("🥅 ARRANCÓ EL PARTIDO!! 🥅"), null, Cor.White, "bold");
    room.sendAnnouncement(centerText("Queres cambiar el uniforme? Escribí '!uni'"), null, 0x2EF55D, "bold");
    room.sendAnnouncement(centerText("Para uniformes exclusivos, usá '!uni2'"), null, 0xFFAE00, "bold");
    room.sendAnnouncement(centerText("[💬] Utilizá ’t' mensaje para chatear con tu equipo!"), null, 0x5EE7FF);
    if (TeamR.length == maxTeamSize && TeamB.length == maxTeamSize) {
        for (var i = 0; i < maxTeamSize; i++) {
            allReds.push(TeamR[i]);
            allBlues.push(TeamB[i]);
        }
    }
    for (var i = 0; i < extendedP.length; i++) {
        extendedP[i][eP.GK] = 0;
        extendedP[i][eP.ACT] = 0;
        room.getPlayer(extendedP[i][eP.ID]) == null ? extendedP.splice(i, 1) : null;
    }
    deactivateChooseMode();
}

room.onGameStop = function(byPlayer) {
    if (byPlayer.id == 0 && endGameVariable) {
        updateTeams();
        if (inChooseMode) {
            if (players.length == 2 * maxTeamSize) {
                inChooseMode = false;
                resetBtn();
                for (var i = 0; i < maxTeamSize; i++) {
                    setTimeout(() => {
                        randomBtn();
                    }, 400 * i);
                }
                setTimeout(() => {
                    room.startGame();
                }, 2000);
            } else {
                if (lastWinner == Team.RED) {
                    blueToSpecBtn();
                } else if (lastWinner == Team.BLUE) {
                    redToSpecBtn();
                    blueToRedBtn();
                } else {
                    resetBtn();
                }
                setTimeout(() => {
                    topBtn();
                }, 500);
            }
        } else {
            if (players.length == 2) {
                if (lastWinner == Team.BLUE) {
                    room.setPlayerTeam(TeamB[0].id, Team.RED);
                    room.setPlayerTeam(TeamR[0].id, Team.BLUE);
                }
                setTimeout(() => {
                    room.startGame();
                }, 2000);
            } else if (players.length == 3 || players.length >= 2 * maxTeamSize + 1) {
                if (lastWinner == Team.RED) {
                    blueToSpecBtn();
                } else {
                    redToSpecBtn();
                    blueToRedBtn();
                }
                setTimeout(() => {
                    topBtn();
                }, 200);
                setTimeout(() => {
                    room.startGame();
                }, 2000);
            } else if (players.length == 4) {
                resetBtn();
                setTimeout(() => {
                    randomBtn();
                    setTimeout(() => {
                        randomBtn();
                    }, 500);
                }, 500);
                setTimeout(() => {
                    room.startGame();
                }, 2000);
            } else if (players.length == 5 || players.length >= 2 * maxTeamSize + 1) {
                if (lastWinner == Team.RED) {
                    blueToSpecBtn();
                } else {
                    redToSpecBtn();
                    blueToRedBtn();
                }
                setTimeout(() => {
                    topBtn();
                }, 200);
                activateChooseMode();
            } else if (players.length == 6) {
                resetBtn();
                setTimeout(() => {
                    randomBtn();
                    setTimeout(() => {
                        randomBtn();
                        setTimeout(() => {
                            randomBtn();
                        }, 500);
                    }, 500);
                }, 500);
                setTimeout(() => {
                    room.startGame();
                }, 2000);
            }
        }
    }
}

room.onGamePause = function(byPlayer) {}

room.onGameUnpause = function(byPlayer) {
    if (TeamR.length == 4 && TeamB.length == 4 && inChooseMode || (TeamR.length == TeamB.length && teamS.length < 2 && inChooseMode)) {
        deactivateChooseMode();
    }
}

room.onTeamGoal = function(team) {
    teamgoaler = team;
    let assistencia = "";
    let goleador = "";
    let goalMaker = lastPlayersTouched[0].id;
    activePlay = false;
    countAFK = false;
    const scores = room.getScores();
    game.scores = scores;
    if (lastPlayersTouched[0] != null && lastPlayersTouched[0].team == team) {
		if (lastPlayersTouched[1] != null && lastPlayersTouched[1].team == team) {
			var frasegol = frasesGols[(Math.random() * frasesGols.length) | 0]
			var fraseasis = frasesasis[(Math.random() * frasesasis.length) | 0]
			room.sendAnnouncement(frasegol + "       " +  lastPlayersTouched[0].name + (team == Team.RED ? "🔴" : "🔵"),null,(team == Team.RED ? Cor.Vermelho : 0x5ec0f1),'bold');
        //    room.sendAnnouncement(centerText("TOCA LA MÚÚSICAAA, ES GOOOOOL!!!"), null, Cor.Verde, "bold");
          // room.sendAnnouncement(centerText(frasegol + lastPlayersTouched[0].name), null, Cor.White, "bold");
          //  room.sendAnnouncement(centerText(fraseasis + " " + lastPlayersTouched[1].name), null, Cor.White, "bold");
         //   room.sendAnnouncement(centerText("Velocidad de tiro: " + ballSpeed.toPrecision(4).toString() + " km/h"), null, Cor.White, "normal");
            game.goals.push(new Goal(scores.time, team, lastPlayersTouched[0], lastPlayersTouched[1]));
			}
			else {
				var frasegol = frasesGols[(Math.random() * frasesGols.length) | 0]
			    room.sendAnnouncement(frasegol + "       " +  lastPlayersTouched[0].name + (team == Team.RED ? "🔴" : "🔵"),null,(team == Team.RED ? Cor.Vermelho : 0x5ec0f1),'bold');
            ///    room.sendAnnouncement(centerText("TOCA LA MÚÚSICAAA, ES GOOOOOL!!!"), null, Cor.Verde, "bold");
            ///    room.sendAnnouncement(centerText(frasegol + lastPlayersTouched[0].name), null, Cor.White, "bold");
            ///    room.sendAnnouncement(centerText("Velocidad de tiro: " + ballSpeed.toPrecision(4).toString() + " km/h"), null, Cor.White, "normal");
                game.goals.push(new Goal(scores.time, team, lastPlayersTouched[0], null));
			}
			setTimeout(function () {
				room.setPlayerAvatar(goalMaker, "🎯")
				setTimeout(function () {
					room.setPlayerAvatar(goalMaker, "⚽")
					setTimeout(function () {
						room.setPlayerAvatar(goalMaker, null)
					}, 3000);
				}, 1200);
			}, 1);
		
			if (lastPlayersTouched[1] != null && lastPlayersTouched[1].team == team) {
				let goalAssist = lastPlayersTouched[1].id;
				assistencia = lastPlayersTouched[1];
				setTimeout(function () {
					room.setPlayerAvatar(goalAssist, "🤝")
					setTimeout(function () {
						room.setPlayerAvatar(goalAssist, "👟")
						setTimeout(function () {
							room.setPlayerAvatar(goalAssist, null)
						}, 2500);
					}, 1000);
				}, 1);
			}

		}
		else {
			var fraseautogol = frasesautogol[(Math.random() * frasesautogol.length) | 0]
			room.sendAnnouncement(fraseautogol + "       " +  lastPlayersTouched[0].name + (team == Team.RED ? "🔴" : "🔵"),null,(team == Team.RED ? Cor.Vermelho : 0x5ec0f1),'bold');
           // room.sendAnnouncement(centerText("🤦‍♂️ ES GOL EN CONTRA!! 🤦‍♂️"), null, Cor.Yellow, "bold");
           // room.sendAnnouncement(centerText(fraseautogol + lastPlayersTouched[0].name), null, Cor.White, "bold");
            // room.sendAnnouncement(centerText("Velocidad de tiro: " + ballSpeed.toPrecision(4).toString() + " km/h"), null, Cor.White, "normal");
			game.goals.push(new Goal(scores.time, team, null, null));
			setTimeout(function () {
				room.setPlayerAvatar(goalMaker, "🤦‍♂️")
				setTimeout(function () {
					room.setPlayerAvatar(goalMaker, "🤡")
					setTimeout(function () {
						room.setPlayerAvatar(goalMaker, null)
					}, 3000);
				}, 1000);
			}, 1);

        golcontra(lastPlayersTouched[0]);
		}
		
		if (scores.scoreLimit != 0 && (scores.red == scores.scoreLimit || scores.blue == scores.scoreLimit && scores.blue > 0 || goldenGoal == true)) {
			endGame(team);
			goldenGoal = false;
			setTimeout(() => { room.stopGame(); }, 1000);
		}
	}

room.onPositionsReset = function() {
    countAFK = true;
    lastPlayersTouched = [null, null];
}

/* DIVERSOS */

room.onRoomLink = function(url) {}

room.onPlayerAdminChange = function(changedPlayer, byPlayer) {
    if (getMute(changedPlayer) && changedPlayer.admin) {
        room.sendChat(changedPlayer.name + " fue desmutado.");
        setMute(changedPlayer, false);
    }
    if (byPlayer.id != 0 && localStorage.getItem(getAuth(byPlayer)) && JSON.parse(localStorage.getItem(getAuth(byPlayer)))[Ss.RL] == "admin") {
        room.sendChat("No se le permite nombrar a un jugador como administrador!", byPlayer.id);
        room.setPlayerAdmin(changedPlayer.id, false);
    }
}

room.onStadiumChange = function(newStadiumName, byPlayer) {}

room.onGameTick = function() {
    checkTime();
    getLastTouchOfTheBall();
    getStats();
    handleInactivity();
}

msg1 = setInterval(function() {
    room.sendAnnouncement("Acá no aceptamos kukas, zurdos, comunistas, ni socialistas. Me GIGA chupa la pija la opinión de cualquiera de estos asesinos, asi que si no te gusta, clic en leave. Abrazo!", null, 0xff8a4a, "normal");
}, msg1Time);
